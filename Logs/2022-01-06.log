2022-01-06 14:01:45,241 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 14:01:46,138 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 14:01:46,171 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:01:46,171 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 14:01:46,177 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 14:01:46,186 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:01:46,354 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d06a2e5e64404429b1eb1e7f76f556a3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:01:46,355 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d06a2e5e64404429b1eb1e7f76f556a3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:01:46,356 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:01:46,356 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:01:46,357 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:01:46,357 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d06a2e5e64404429b1eb1e7f76f556a3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:01:46,358 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d06a2e5e64404429b1eb1e7f76f556a3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:01:46,362 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 14:01:46,363 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:01:46,363 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:01:46,364 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:01:46,365 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:01:46,399 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:01:46,399 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 14:01:46,408 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 14:01:46,420 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:01:46,514 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 14:01:46,515 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 14:01:46,515 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 14:01:46,515 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 14:01:46,515 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:01:46,515 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 14:01:46,515 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 14:01:46,516 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 14:01:46,516 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 14:01:46,516 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 14:01:46,516 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 14:01:46,517 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 14:01:46,517 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 14:01:46,517 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 14:01:46,531 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:01:46,531 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 14:01:46,547 - base_api.py:[179] - [INFO] - 查看遍历完成后依赖接口时字典内容：{'test_getUser': {'test_login': ['sessionid']}, 'test_login': {}}
2022-01-06 14:01:46,547 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 14:01:46,562 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:01:46,666 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:08c30aa728a645e1828063fcd5ce70d1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:01:46,666 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:08c30aa728a645e1828063fcd5ce70d1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:01:46,666 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:01:46,667 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:01:46,667 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 14:01:46,667 - base_api.py:[243] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:01:46,682 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:08c30aa728a645e1828063fcd5ce70d1'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:08c30aa728a645e1828063fcd5ce70d1'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 14:01:46,853 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 14:01:46,853 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 14:01:46,853 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 14:01:46,853 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:01:46,854 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:08c30aa728a645e1828063fcd5ce70d1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 14:01:46,854 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 14:01:46,854 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 14:01:46,855 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:01:46,855 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:01:46,855 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:01:46,855 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:01:46,856 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 14:01:46,856 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 14:01:46,857 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 14:01:46,857 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 14:01:46,857 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 14:01:46,857 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 14:01:46,858 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 14:01:46,858 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 14:01:46,866 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:01:46,870 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\goods.yaml，用例名称：test_get_goods_detail************
2022-01-06 14:01:46,881 - base_api.py:[179] - [INFO] - 查看遍历完成后依赖接口时字典内容：{'test_get_goods_detail': {'test_login': ['sessionid']}, 'test_login': {}}
2022-01-06 14:01:46,881 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2022-01-06 14:01:46,893 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:01:46,988 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:3b4094dc689c444b8082e4230c6bdf6d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:01:46,988 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:3b4094dc689c444b8082e4230c6bdf6d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:01:46,988 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:01:46,988 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:01:46,988 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2022-01-06 14:01:46,989 - base_api.py:[243] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:01:46,997 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:3b4094dc689c444b8082e4230c6bdf6d'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:3b4094dc689c444b8082e4230c6bdf6d'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2022-01-06 14:01:47,208 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2022-01-06 14:01:47,214 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2022-01-06 14:01:47,214 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2022-01-06 14:01:47,214 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:01:47,215 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:3b4094dc689c444b8082e4230c6bdf6d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2022-01-06 14:01:47,230 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2022-01-06 14:01:47,246 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2022-01-06 14:01:47,249 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:01:47,249 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:01:47,252 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:01:47,252 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:01:47,253 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2022-01-06 14:01:47,254 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2022-01-06 14:01:47,269 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:01:47,270 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 14:01:47,294 - base_api.py:[179] - [INFO] - 查看遍历完成后依赖接口时字典内容：{'test_OrderQueue': {'test_login': ['sessionid']}, 'test_login': {}}
2022-01-06 14:01:47,294 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 14:01:47,305 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:01:47,410 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f1843c80614b4095bc5304c280b29738', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:01:47,411 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f1843c80614b4095bc5304c280b29738', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:01:47,412 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:01:47,412 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:01:47,413 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 14:01:47,413 - base_api.py:[243] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:01:47,467 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:f1843c80614b4095bc5304c280b29738'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:f1843c80614b4095bc5304c280b29738'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:01:47,576 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:724f6817-3150-4704-b646-30ef016eaf5c'}}}
2022-01-06 14:01:47,576 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 14:01:47,577 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 14:01:47,577 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:01:47,577 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f1843c80614b4095bc5304c280b29738', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:724f6817-3150-4704-b646-30ef016eaf5c'}}}}
2022-01-06 14:01:47,577 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:724f6817-3150-4704-b646-30ef016eaf5c'}}}
2022-01-06 14:01:47,578 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 14:01:47,578 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:01:47,578 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:01:47,578 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 14:01:47,578 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 14:01:47,578 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:01:47,578 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:01:47,646 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 14:01:51,456 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 14:03:15,502 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 14:03:16,085 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:03:16,085 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 14:03:16,091 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 14:03:16,101 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:16,216 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a7522130bf8547c0a579264fdb50c4f6', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:03:16,217 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a7522130bf8547c0a579264fdb50c4f6', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:03:16,218 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:03:16,218 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:03:16,218 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:03:16,219 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a7522130bf8547c0a579264fdb50c4f6', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:03:16,219 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a7522130bf8547c0a579264fdb50c4f6', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:03:16,223 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 14:03:16,224 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:03:16,224 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:03:16,225 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:03:16,226 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:03:16,251 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:03:16,251 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 14:03:16,259 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 14:03:16,267 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:16,429 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 14:03:16,429 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 14:03:16,430 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 14:03:16,430 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 14:03:16,430 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:03:16,430 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 14:03:16,430 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 14:03:16,430 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 14:03:16,430 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 14:03:16,430 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 14:03:16,431 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 14:03:16,431 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 14:03:16,431 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 14:03:16,431 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 14:03:16,445 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:03:16,445 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 14:03:16,457 - base_api.py:[179] - [INFO] - 查看遍历完成后依赖接口时字典内容：{'test_getUser': {'test_login': ['sessionid']}, 'test_login': {}}
2022-01-06 14:03:16,458 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 14:03:16,468 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:16,570 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ab3bc8d4e9484fefb9f700b72d020589', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:03:16,571 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ab3bc8d4e9484fefb9f700b72d020589', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:03:16,571 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:03:16,571 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:03:16,571 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 14:03:16,572 - base_api.py:[243] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:03:16,594 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:ab3bc8d4e9484fefb9f700b72d020589'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:ab3bc8d4e9484fefb9f700b72d020589'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 14:03:16,708 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 14:03:16,709 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 14:03:16,710 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 14:03:16,710 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:03:16,710 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ab3bc8d4e9484fefb9f700b72d020589', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 14:03:16,720 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 14:03:16,721 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 14:03:16,721 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:03:16,721 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:03:16,722 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:03:16,722 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:03:16,722 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 14:03:16,723 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 14:03:16,723 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 14:03:16,723 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 14:03:16,724 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 14:03:16,724 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 14:03:16,724 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 14:03:16,724 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 14:03:16,734 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:03:16,735 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\goods.yaml，用例名称：test_get_goods_detail************
2022-01-06 14:03:16,746 - base_api.py:[179] - [INFO] - 查看遍历完成后依赖接口时字典内容：{'test_get_goods_detail': {'test_login': ['sessionid']}, 'test_login': {}}
2022-01-06 14:03:16,746 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2022-01-06 14:03:16,756 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:16,856 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:31787af064b94961b0a4994518167631', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:03:16,857 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:31787af064b94961b0a4994518167631', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:03:16,857 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:03:16,857 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:03:16,858 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2022-01-06 14:03:16,858 - base_api.py:[243] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:03:16,874 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:31787af064b94961b0a4994518167631'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:31787af064b94961b0a4994518167631'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2022-01-06 14:03:17,085 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2022-01-06 14:03:17,098 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2022-01-06 14:03:17,098 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2022-01-06 14:03:17,099 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:03:17,100 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:31787af064b94961b0a4994518167631', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2022-01-06 14:03:17,115 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2022-01-06 14:03:17,130 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2022-01-06 14:03:17,136 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:03:17,137 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:03:17,143 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:03:17,144 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:03:17,152 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2022-01-06 14:03:17,153 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2022-01-06 14:03:17,188 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:03:17,188 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 14:03:17,206 - base_api.py:[179] - [INFO] - 查看遍历完成后依赖接口时字典内容：{'test_OrderQueue': {'test_login': ['sessionid']}, 'test_login': {}}
2022-01-06 14:03:17,207 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 14:03:17,216 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:17,322 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9614acb2246c4b70ae17d361598b85f8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:03:17,322 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9614acb2246c4b70ae17d361598b85f8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:03:17,323 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:03:17,323 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:03:17,323 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 14:03:17,324 - base_api.py:[243] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:03:17,378 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:9614acb2246c4b70ae17d361598b85f8'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:9614acb2246c4b70ae17d361598b85f8'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:17,475 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:5e3a7c8a-de3d-4231-b968-620e8a965231'}}}
2022-01-06 14:03:17,475 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 14:03:17,475 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 14:03:17,475 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:03:17,476 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9614acb2246c4b70ae17d361598b85f8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:5e3a7c8a-de3d-4231-b968-620e8a965231'}}}}
2022-01-06 14:03:17,476 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:5e3a7c8a-de3d-4231-b968-620e8a965231'}}}
2022-01-06 14:03:17,476 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 14:03:17,477 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:03:17,477 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:03:17,477 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 14:03:17,477 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 14:03:17,477 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:03:17,477 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:03:17,494 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:03:17,494 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_selOrderQueue************
2022-01-06 14:03:17,527 - base_api.py:[179] - [INFO] - 查看遍历完成后依赖接口时字典内容：{'test_selOrderQueue': {'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}, 'test_login': {}, 'test_OrderQueue': {'test_login': ['sessionid']}}
2022-01-06 14:03:17,527 - base_api.py:[179] - [INFO] - 查看遍历完成后依赖接口时字典内容：{'test_selOrderQueue': {'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}, 'test_login': {}, 'test_OrderQueue': {'test_login': ['sessionid']}}
2022-01-06 14:03:17,528 - base_api.py:[210] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2022-01-06 14:03:17,535 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:17,679 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:70ceca8bb4444256b0cd4383db0d7f22', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:03:17,711 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:17,812 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ed5f0965af414003818c9fa6947babc1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:03:17,812 - base_api.py:[237] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ed5f0965af414003818c9fa6947babc1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:03:17,813 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:03:17,814 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:03:17,814 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 14:03:17,814 - base_api.py:[243] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:03:17,870 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:ed5f0965af414003818c9fa6947babc1'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:ed5f0965af414003818c9fa6947babc1'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:03:17,977 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:f884b625-897f-48d2-bb20-2d3f112b191d'}}}
2022-01-06 14:03:17,977 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 14:03:17,978 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 14:03:17,978 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2022-01-06 14:03:17,979 - base_api.py:[243] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2022-01-06 14:03:18,024 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:ed5f0965af414003818c9fa6947babc1'", 'queueNumber': "'liveQueue:f884b625-897f-48d2-bb20-2d3f112b191d'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_test_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:ed5f0965af414003818c9fa6947babc1'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:f884b625-897f-48d2-bb20-2d3f112b191d'}, 'tag': None}
2022-01-06 14:03:18,097 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2022-01-06 14:03:18,097 - base_api.py:[253] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2022-01-06 14:03:18,097 - base_api.py:[254] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2022-01-06 14:03:18,098 - base_api.py:[256] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:03:18,098 - base_api.py:[267] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ed5f0965af414003818c9fa6947babc1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:f884b625-897f-48d2-bb20-2d3f112b191d'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2022-01-06 14:03:18,098 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2022-01-06 14:03:18,099 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2022-01-06 14:03:18,099 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2022-01-06 14:03:18,099 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2022-01-06 14:03:18,099 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2022-01-06 14:03:18,100 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2022-01-06 14:03:18,100 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 14:03:18,100 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 14:03:18,243 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 14:03:20,824 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 14:44:40,223 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 14:44:40,775 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 14:44:40,787 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:44:40,787 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 14:44:40,793 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 14:44:40,802 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:44:40,989 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d6c518e2e0c245989496a6427b3daf09', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:44:40,990 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d6c518e2e0c245989496a6427b3daf09', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:44:40,990 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:44:40,990 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:44:40,990 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:44:40,990 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d6c518e2e0c245989496a6427b3daf09', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:44:40,990 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d6c518e2e0c245989496a6427b3daf09', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:44:40,991 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 14:44:40,991 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:44:40,991 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:44:40,992 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:44:40,992 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:44:41,002 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:44:41,003 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 14:44:41,009 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 14:44:41,017 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:44:41,105 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 14:44:41,105 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 14:44:41,105 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 14:44:41,106 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 14:44:41,106 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:44:41,106 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 14:44:41,106 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 14:44:41,106 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 14:44:41,106 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 14:44:41,106 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 14:44:41,107 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 14:44:41,107 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 14:44:41,107 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 14:44:41,107 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 14:44:41,119 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:44:41,120 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 14:44:41,133 - base_api.py:[180] - [INFO] - api_depend_keys：{'test_getUser': {'test_login': ['sessionid']}, 'test_login': {}}\nget_depend_dic<function BaseApi.get_api_depend_dic.<locals>.get_depend_dic at 0x00000196019DAF28>
2022-01-06 14:44:41,133 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 14:44:41,143 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:44:41,236 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4893ceaf1c2849d495c24ca5e80a5495', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:44:41,237 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4893ceaf1c2849d495c24ca5e80a5495', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:44:41,237 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:44:41,237 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:44:41,237 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 14:44:41,237 - base_api.py:[244] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:44:41,247 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:4893ceaf1c2849d495c24ca5e80a5495'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:4893ceaf1c2849d495c24ca5e80a5495'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 14:44:41,368 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 14:44:41,368 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 14:44:41,368 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 14:44:41,368 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:44:41,369 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4893ceaf1c2849d495c24ca5e80a5495', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 14:44:41,374 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 14:44:41,374 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 14:44:41,375 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:44:41,376 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:44:41,376 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:44:41,376 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:44:41,377 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 14:44:41,377 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 14:44:41,377 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 14:44:41,377 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 14:44:41,378 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 14:44:41,378 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 14:44:41,378 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 14:44:41,378 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 14:44:41,385 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:44:41,390 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\goods.yaml，用例名称：test_get_goods_detail************
2022-01-06 14:44:41,399 - base_api.py:[180] - [INFO] - api_depend_keys：{'test_get_goods_detail': {'test_login': ['sessionid']}, 'test_login': {}}\nget_depend_dic<function BaseApi.get_api_depend_dic.<locals>.get_depend_dic at 0x0000019601A82950>
2022-01-06 14:44:41,399 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2022-01-06 14:44:41,409 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:44:41,499 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0a891d6b07064a0f8329e59c33f0a188', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:44:41,499 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0a891d6b07064a0f8329e59c33f0a188', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:44:41,499 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:44:41,500 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:44:41,500 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2022-01-06 14:44:41,500 - base_api.py:[244] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:44:41,507 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:0a891d6b07064a0f8329e59c33f0a188'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:0a891d6b07064a0f8329e59c33f0a188'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2022-01-06 14:44:41,746 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2022-01-06 14:44:41,753 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2022-01-06 14:44:41,754 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2022-01-06 14:44:41,754 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:44:41,754 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0a891d6b07064a0f8329e59c33f0a188', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2022-01-06 14:44:41,768 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2022-01-06 14:44:41,784 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2022-01-06 14:44:41,786 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:44:41,786 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:44:41,788 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:44:41,788 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:44:41,789 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2022-01-06 14:44:41,789 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2022-01-06 14:44:41,812 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:44:41,813 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 14:44:41,849 - base_api.py:[180] - [INFO] - api_depend_keys：{'test_OrderQueue': {'test_login': ['sessionid']}, 'test_login': {}}\nget_depend_dic<function BaseApi.get_api_depend_dic.<locals>.get_depend_dic at 0x0000019601A82268>
2022-01-06 14:44:41,849 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 14:44:41,857 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:44:41,966 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0eb73e81caac41868be091654eb123df', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:44:41,966 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0eb73e81caac41868be091654eb123df', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:44:41,967 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:44:41,967 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:44:41,967 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 14:44:41,968 - base_api.py:[244] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:44:42,035 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:0eb73e81caac41868be091654eb123df'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:0eb73e81caac41868be091654eb123df'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:44:42,175 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:36fad95e-bd8e-4b50-bdab-03880f166185'}}}
2022-01-06 14:44:42,175 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 14:44:42,175 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 14:44:42,175 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:44:42,176 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0eb73e81caac41868be091654eb123df', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:36fad95e-bd8e-4b50-bdab-03880f166185'}}}}
2022-01-06 14:44:42,176 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:36fad95e-bd8e-4b50-bdab-03880f166185'}}}
2022-01-06 14:44:42,177 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 14:44:42,177 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:44:42,178 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:44:42,178 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 14:44:42,178 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 14:44:42,179 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:44:42,179 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:44:42,224 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 14:44:44,898 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 14:45:44,170 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 14:45:44,733 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 14:45:44,748 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:45:44,748 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 14:45:44,754 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 14:45:44,763 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:45:44,890 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:05145858d1b34114977f7ceb57fc4003', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:45:44,890 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:05145858d1b34114977f7ceb57fc4003', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:45:44,890 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:45:44,890 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:45:44,891 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:45:44,891 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:05145858d1b34114977f7ceb57fc4003', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:45:44,891 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:05145858d1b34114977f7ceb57fc4003', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:45:44,892 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 14:45:44,892 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:45:44,892 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:45:44,892 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:45:44,892 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:45:44,904 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:45:44,904 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 14:45:44,910 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 14:45:44,921 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:45:45,010 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 14:45:45,010 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 14:45:45,010 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 14:45:45,010 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 14:45:45,010 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:45:45,011 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 14:45:45,011 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 14:45:45,011 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 14:45:45,012 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 14:45:45,012 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 14:45:45,012 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 14:45:45,012 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 14:45:45,012 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 14:45:45,012 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 14:45:45,025 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:45:45,025 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 14:45:45,040 - base_api.py:[180] - [INFO] - api_depend_keys：{'test_getUser': {'test_login': ['sessionid']}, 'test_login': {}}   last_depend_dic{'test_login': {}}   api_path_dic{'test_getUser': '.\\yaml_test_api\\buyer_login.yaml', 'test_login': '.\\yaml_test_api\\buyer_login.yaml'}
2022-01-06 14:45:45,041 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 14:45:45,052 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:45:45,156 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:667567f6915a4d708f62c3f864a0d1a2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:45:45,156 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:667567f6915a4d708f62c3f864a0d1a2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:45:45,157 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:45:45,157 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:45:45,157 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 14:45:45,157 - base_api.py:[244] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:45:45,167 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:667567f6915a4d708f62c3f864a0d1a2'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:667567f6915a4d708f62c3f864a0d1a2'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 14:45:45,277 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 14:45:45,277 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 14:45:45,277 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 14:45:45,277 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:45:45,277 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:667567f6915a4d708f62c3f864a0d1a2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 14:45:45,289 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 14:45:45,289 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 14:45:45,290 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:45:45,290 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:45:45,290 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:45:45,291 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:45:45,291 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 14:45:45,291 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 14:45:45,292 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 14:45:45,292 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 14:45:45,292 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 14:45:45,292 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 14:45:45,293 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 14:45:45,293 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 14:45:45,301 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:45:45,305 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\goods.yaml，用例名称：test_get_goods_detail************
2022-01-06 14:45:45,315 - base_api.py:[180] - [INFO] - api_depend_keys：{'test_get_goods_detail': {'test_login': ['sessionid']}, 'test_login': {}}   last_depend_dic{'test_login': {}}   api_path_dic{'test_get_goods_detail': '.\\yaml_test_api\\goods.yaml', 'test_login': '.\\yaml_test_api\\buyer_login.yaml'}
2022-01-06 14:45:45,315 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2022-01-06 14:45:45,329 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:45:45,424 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ed336fea3d09446d84a5de02a4e0e084', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:45:45,424 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ed336fea3d09446d84a5de02a4e0e084', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:45:45,425 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:45:45,425 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:45:45,425 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2022-01-06 14:45:45,425 - base_api.py:[244] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:45:45,432 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:ed336fea3d09446d84a5de02a4e0e084'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:ed336fea3d09446d84a5de02a4e0e084'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2022-01-06 14:45:45,643 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2022-01-06 14:45:45,651 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2022-01-06 14:45:45,651 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2022-01-06 14:45:45,651 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:45:45,652 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ed336fea3d09446d84a5de02a4e0e084', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2022-01-06 14:45:45,667 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2022-01-06 14:45:45,683 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2022-01-06 14:45:45,685 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:45:45,685 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:45:45,686 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:45:45,686 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:45:45,688 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2022-01-06 14:45:45,688 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2022-01-06 14:45:45,704 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 14:45:45,704 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 14:45:45,721 - base_api.py:[180] - [INFO] - api_depend_keys：{'test_OrderQueue': {'test_login': ['sessionid']}, 'test_login': {}}   last_depend_dic{'test_login': {}}   api_path_dic{'test_OrderQueue': '.\\yaml_test_api\\order.yaml', 'test_login': '.\\yaml_test_api\\buyer_login.yaml'}
2022-01-06 14:45:45,722 - base_api.py:[211] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 14:45:45,730 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:45:45,921 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:46c6871ca99f46378a4de34af633644a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 14:45:45,922 - base_api.py:[238] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:46c6871ca99f46378a4de34af633644a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 14:45:45,923 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 14:45:45,923 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 14:45:45,923 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 14:45:45,924 - base_api.py:[244] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 14:45:45,960 - base_api.py:[84] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:46c6871ca99f46378a4de34af633644a'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:46c6871ca99f46378a4de34af633644a'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 14:45:46,113 - base_api.py:[89] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:17fa4055-87c2-4d60-91a7-0e9512f69db7'}}}
2022-01-06 14:45:46,114 - base_api.py:[254] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 14:45:46,114 - base_api.py:[255] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 14:45:46,114 - base_api.py:[257] - [INFO] - 下游接口名far_api_name为None
2022-01-06 14:45:46,115 - base_api.py:[268] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:46c6871ca99f46378a4de34af633644a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:17fa4055-87c2-4d60-91a7-0e9512f69db7'}}}}
2022-01-06 14:45:46,115 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:17fa4055-87c2-4d60-91a7-0e9512f69db7'}}}
2022-01-06 14:45:46,116 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 14:45:46,116 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 14:45:46,117 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 14:45:46,117 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 14:45:46,117 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 14:45:46,117 - base_api.py:[117] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 14:45:46,118 - base_api.py:[120] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 14:45:46,173 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 14:45:49,016 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 15:24:39,368 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 15:24:39,932 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 15:24:39,945 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:24:39,946 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 15:24:39,952 - base_api.py:[212] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 15:24:39,961 - base_api.py:[85] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:24:40,168 - base_api.py:[90] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5b2ebc38644d4db5bd3ec932f6f5b0f0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:24:40,169 - base_api.py:[239] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5b2ebc38644d4db5bd3ec932f6f5b0f0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:24:40,169 - base_api.py:[255] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:24:40,169 - base_api.py:[256] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:24:40,169 - base_api.py:[258] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:24:40,169 - base_api.py:[269] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5b2ebc38644d4db5bd3ec932f6f5b0f0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:24:40,170 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5b2ebc38644d4db5bd3ec932f6f5b0f0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:24:40,171 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 15:24:40,171 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:24:40,172 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:24:40,172 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:24:40,172 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:24:40,187 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:24:40,188 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 15:24:40,195 - base_api.py:[212] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 15:24:40,204 - base_api.py:[85] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:24:40,426 - base_api.py:[90] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 15:24:40,426 - base_api.py:[239] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 15:24:40,426 - base_api.py:[255] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 15:24:40,426 - base_api.py:[256] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 15:24:40,426 - base_api.py:[258] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:24:40,427 - base_api.py:[269] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 15:24:40,427 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 15:24:40,427 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 15:24:40,427 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 15:24:40,427 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 15:24:40,427 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 15:24:40,427 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 15:24:40,428 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 15:24:40,428 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 15:24:40,440 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:24:40,440 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 15:24:40,453 - base_api.py:[212] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 15:24:40,462 - base_api.py:[85] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:24:40,627 - base_api.py:[90] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5fbf043339df431096796bc6586494b9', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:24:40,627 - base_api.py:[239] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5fbf043339df431096796bc6586494b9', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:24:40,628 - base_api.py:[255] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:24:40,628 - base_api.py:[256] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:24:40,629 - base_api.py:[258] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 15:24:40,629 - base_api.py:[245] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 15:24:40,649 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 15:24:40,655 - base_api.py:[85] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:5fbf043339df431096796bc6586494b9'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:5fbf043339df431096796bc6586494b9'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 15:24:41,017 - base_api.py:[90] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 15:24:41,017 - base_api.py:[255] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 15:24:41,017 - base_api.py:[256] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 15:24:41,017 - base_api.py:[258] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:24:41,018 - base_api.py:[269] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5fbf043339df431096796bc6586494b9', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 15:24:41,020 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 15:24:41,021 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 15:24:41,021 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:24:41,021 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:24:41,022 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:24:41,022 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:24:41,022 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 15:24:41,022 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 15:24:41,023 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 15:24:41,023 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 15:24:41,023 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 15:24:41,023 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 15:24:41,024 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 15:24:41,024 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 15:24:41,039 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:24:41,039 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 15:24:41,057 - base_api.py:[212] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 15:24:41,065 - base_api.py:[85] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:24:41,272 - base_api.py:[90] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cef16fb830ee4dafb56a7c4271ed7bec', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:24:41,273 - base_api.py:[239] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cef16fb830ee4dafb56a7c4271ed7bec', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:24:41,273 - base_api.py:[255] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:24:41,273 - base_api.py:[256] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:24:41,274 - base_api.py:[258] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 15:24:41,274 - base_api.py:[245] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 15:24:41,307 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 15:24:41,322 - base_api.py:[85] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:cef16fb830ee4dafb56a7c4271ed7bec'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:cef16fb830ee4dafb56a7c4271ed7bec'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:24:41,466 - base_api.py:[90] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:51cb8891-c440-4b60-b4c0-c6174902ee24'}}}
2022-01-06 15:24:41,466 - base_api.py:[255] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 15:24:41,466 - base_api.py:[256] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 15:24:41,466 - base_api.py:[258] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:24:41,466 - base_api.py:[269] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cef16fb830ee4dafb56a7c4271ed7bec', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:51cb8891-c440-4b60-b4c0-c6174902ee24'}}}}
2022-01-06 15:24:41,467 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:51cb8891-c440-4b60-b4c0-c6174902ee24'}}}
2022-01-06 15:24:41,467 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 15:24:41,467 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:24:41,467 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:24:41,468 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 15:24:41,468 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 15:24:41,468 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:24:41,468 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:24:41,547 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 15:24:45,462 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 15:44:54,462 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 15:44:55,082 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 15:44:55,096 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:44:55,096 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 15:44:55,102 - base_api.py:[213] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 15:44:55,111 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:44:55,438 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a5251d49e074446ba953cc170796680c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:44:55,439 - base_api.py:[240] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a5251d49e074446ba953cc170796680c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:44:55,439 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:44:55,439 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:44:55,439 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:44:55,439 - base_api.py:[270] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a5251d49e074446ba953cc170796680c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:44:55,439 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a5251d49e074446ba953cc170796680c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:44:55,440 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 15:44:55,440 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:44:55,440 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:44:55,441 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:44:55,441 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:44:55,452 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:44:55,452 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 15:44:55,461 - base_api.py:[213] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 15:44:55,470 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:44:55,753 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 15:44:55,753 - base_api.py:[240] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 15:44:55,753 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 15:44:55,753 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 15:44:55,753 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:44:55,754 - base_api.py:[270] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 15:44:55,754 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 15:44:55,754 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 15:44:55,754 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 15:44:55,755 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 15:44:55,755 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 15:44:55,755 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 15:44:55,755 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 15:44:55,755 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 15:44:55,767 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:44:55,768 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 15:44:55,786 - base_api.py:[213] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 15:44:55,795 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:44:55,940 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:62f2632f6ab2485eb13a74db947f599e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:44:55,941 - base_api.py:[240] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:62f2632f6ab2485eb13a74db947f599e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:44:55,942 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:44:55,942 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:44:55,943 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 15:44:55,943 - base_api.py:[246] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 15:44:55,967 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 15:44:55,973 - base_api.py:[81] - [INFO] - api_datas:{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:62f2632f6ab2485eb13a74db947f599e'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 15:44:55,973 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:62f2632f6ab2485eb13a74db947f599e'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:62f2632f6ab2485eb13a74db947f599e'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 15:44:56,166 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 15:44:56,167 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 15:44:56,167 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 15:44:56,167 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:44:56,167 - base_api.py:[270] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:62f2632f6ab2485eb13a74db947f599e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 15:44:56,168 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 15:44:56,169 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 15:44:56,171 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:44:56,171 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:44:56,173 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:44:56,173 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:44:56,175 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 15:44:56,176 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 15:44:56,179 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 15:44:56,179 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 15:44:56,181 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 15:44:56,181 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 15:44:56,183 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 15:44:56,183 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 15:44:56,217 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:44:56,217 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 15:44:56,236 - base_api.py:[213] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 15:44:56,245 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:44:56,355 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:1db2f4ae2b004c9aaf2b65616724a3c5', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:44:56,355 - base_api.py:[240] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:1db2f4ae2b004c9aaf2b65616724a3c5', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:44:56,355 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:44:56,356 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:44:56,356 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 15:44:56,356 - base_api.py:[246] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 15:44:56,394 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 15:44:56,406 - base_api.py:[81] - [INFO] - api_datas:{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:1db2f4ae2b004c9aaf2b65616724a3c5'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:44:56,406 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:1db2f4ae2b004c9aaf2b65616724a3c5'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:1db2f4ae2b004c9aaf2b65616724a3c5'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:44:56,550 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:66cec827-237c-47e5-a001-452655044223'}}}
2022-01-06 15:44:56,550 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 15:44:56,550 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 15:44:56,550 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:44:56,551 - base_api.py:[270] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:1db2f4ae2b004c9aaf2b65616724a3c5', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:66cec827-237c-47e5-a001-452655044223'}}}}
2022-01-06 15:44:56,551 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:66cec827-237c-47e5-a001-452655044223'}}}
2022-01-06 15:44:56,551 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 15:44:56,552 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:44:56,552 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:44:56,552 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 15:44:56,552 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 15:44:56,552 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:44:56,552 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:44:56,634 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 15:44:59,568 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 15:45:56,143 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 15:45:56,777 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 15:45:56,791 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:45:56,791 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 15:45:56,798 - base_api.py:[213] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 15:45:56,808 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:45:57,002 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8d21ea38caf6495fb9a28b9519ae593b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:45:57,003 - base_api.py:[240] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8d21ea38caf6495fb9a28b9519ae593b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:45:57,003 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:45:57,003 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:45:57,003 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:45:57,003 - base_api.py:[270] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8d21ea38caf6495fb9a28b9519ae593b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:45:57,003 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8d21ea38caf6495fb9a28b9519ae593b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:45:57,004 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 15:45:57,004 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:45:57,005 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:45:57,005 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:45:57,005 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:45:57,020 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:45:57,021 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 15:45:57,030 - base_api.py:[213] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 15:45:57,044 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:45:57,132 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 15:45:57,133 - base_api.py:[240] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 15:45:57,133 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 15:45:57,133 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 15:45:57,133 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:45:57,133 - base_api.py:[270] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 15:45:57,133 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 15:45:57,133 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 15:45:57,134 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 15:45:57,134 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 15:45:57,134 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 15:45:57,134 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 15:45:57,135 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 15:45:57,135 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 15:45:57,147 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:45:57,147 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 15:45:57,160 - base_api.py:[213] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 15:45:57,171 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:45:57,269 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40be1ecb81354db58e311f76c55d5719', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:45:57,270 - base_api.py:[240] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40be1ecb81354db58e311f76c55d5719', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:45:57,270 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:45:57,270 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:45:57,270 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 15:45:57,270 - base_api.py:[246] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 15:45:57,283 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 15:45:57,286 - base_api.py:[81] - [INFO] - temp_api_datas:api: /api_v2/provider-app/paLogin/getUser
data: null
depend:
- api:
  - .\yaml_test_api\buyer_login.yaml
  - test_login
  keys:
  - sessionid
except:
  buyerLevel: 10
  code: 200
  inviter: 19355
  message: "\u8C03\u7528\u6210\u529F\u3002"
  superior: 19414
  userId: 19414
headers:
  app-sessionid: 'al:15200000001APP:40be1ecb81354db58e311f76c55d5719'
is_skip: null
json: null
method: get
params: null
tag: null
;;api_datas:{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:40be1ecb81354db58e311f76c55d5719'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 15:45:57,288 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:40be1ecb81354db58e311f76c55d5719'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:40be1ecb81354db58e311f76c55d5719'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 15:45:57,530 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 15:45:57,531 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 15:45:57,531 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 15:45:57,532 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:45:57,532 - base_api.py:[270] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40be1ecb81354db58e311f76c55d5719', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 15:45:57,536 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 15:45:57,538 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 15:45:57,540 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:45:57,542 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:45:57,543 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:45:57,543 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:45:57,544 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 15:45:57,545 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 15:45:57,546 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 15:45:57,546 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 15:45:57,548 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 15:45:57,548 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 15:45:57,550 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 15:45:57,550 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 15:45:57,583 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:45:57,583 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 15:45:57,602 - base_api.py:[213] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 15:45:57,611 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:45:57,705 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0045f0a35b3348978cf530eeb5fcbd6b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:45:57,705 - base_api.py:[240] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0045f0a35b3348978cf530eeb5fcbd6b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:45:57,705 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:45:57,705 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:45:57,706 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 15:45:57,706 - base_api.py:[246] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 15:45:57,736 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 15:45:57,754 - base_api.py:[81] - [INFO] - temp_api_datas:api: /api_v2/provider-app/paOrder/OrderQueue
data: null
depend:
- api:
  - .\yaml_test_api\buyer_login.yaml
  - test_login
  keys:
  - sessionid
except:
  code: 200
  message: "\u8C03\u7528\u6210\u529F\u3002"
  status: 1
headers:
  app-sessionid: 'al:15200000001APP:0045f0a35b3348978cf530eeb5fcbd6b'
is_skip: null
json:
  buildOrderDto:
    addressId: '2021091017461470821268'
    areaId: 3374
    bgCSkusWithPromotionDTO:
      cskusWithoutPromotion:
      - buyerPrice: 0
        cskuId: 31981
        discountUnitPrice: 0
        goldPrice: 0
        groupPrice: 1300
        haveChosen: true
        promotionNum: 0
        realTotalPrice: 0
        realUnitPrice: 0
        shopCartCSku:
          aPrice: 1000
          attributes:
          - key: "\u5C3A\u5BF8"
            value: "\u24601.5*200cm"
          - key: "\u989C\u8272"
            value: "\u5361\u5176\u8272"
          bPrice: 1200
          cskuId: 31981
          cspuId: 4961
          delivery: 1
          goodsType: 1
          groupPrice: 1300
          isRegister: 1
          limitMode: 0
          limitNum: 999
          num: 1
          pic: http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg
          preIncome: 300
          skuId: 13
          smallGoldPrice: 1100
          spuId: 6
          status: 1
          supplierName: "\u6211\u662F\u4E70\u624B\u5546\u57CE"
          title: "\u6EE1\u51CF\u6309\u6469\u6905C\u52FF\u6539"
          type: 1
        skuNum: 1
        smallGoldPrice: 0
      promotionAndCSkus: []
      totalChosenPrice: 1300
      totalChosenRealPrice: 1300
    buyerId: 19414
    cheapAmount: 0
    cloudSkuIds:
    - 31981
    cspuIds:
    - 4961
    freightAmount: 0
    isGroupOrder: 2
    mark: ''
    needCleanShopCart: false
    ocrId: 0
    orderItems:
    - cloudSkuId: 31981
      cspuId: 4961
      isPromotion: 0
      promotionId: 0
      promotionUnitPrice: 0
      skuNum: 1
      unitPrice: 1300
    orderType: 1
    preferentialID: 0
    productAmount: 1300
    realPayAmount: 1300
    skuIds:
    - 13
  sendMessageTime: 0
method: post
params: null
tag: null
;;api_datas:{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:0045f0a35b3348978cf530eeb5fcbd6b'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:45:57,756 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:0045f0a35b3348978cf530eeb5fcbd6b'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:0045f0a35b3348978cf530eeb5fcbd6b'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:45:57,859 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:2091913d-5c0e-476e-9098-a84461067636'}}}
2022-01-06 15:45:57,859 - base_api.py:[256] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 15:45:57,859 - base_api.py:[257] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 15:45:57,860 - base_api.py:[259] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:45:57,860 - base_api.py:[270] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0045f0a35b3348978cf530eeb5fcbd6b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:2091913d-5c0e-476e-9098-a84461067636'}}}}
2022-01-06 15:45:57,860 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:2091913d-5c0e-476e-9098-a84461067636'}}}
2022-01-06 15:45:57,861 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 15:45:57,861 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:45:57,861 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:45:57,861 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 15:45:57,861 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 15:45:57,861 - base_api.py:[119] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:45:57,862 - base_api.py:[122] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:45:57,916 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 15:46:00,614 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 15:53:34,173 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 15:53:34,817 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 15:53:34,831 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:53:34,831 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 15:53:34,838 - base_api.py:[214] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 15:53:34,847 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:53:35,017 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:aa7360f3c2f94a3babba3cb65da4f0a4', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:53:35,018 - base_api.py:[241] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:aa7360f3c2f94a3babba3cb65da4f0a4', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:53:35,019 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:53:35,019 - base_api.py:[259] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:53:35,020 - base_api.py:[261] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:53:35,020 - base_api.py:[272] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:aa7360f3c2f94a3babba3cb65da4f0a4', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:53:35,021 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:aa7360f3c2f94a3babba3cb65da4f0a4', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:53:35,024 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 15:53:35,025 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:53:35,026 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:53:35,027 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:53:35,027 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:53:35,062 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:53:35,062 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 15:53:35,073 - base_api.py:[214] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 15:53:35,084 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:53:35,257 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 15:53:35,257 - base_api.py:[241] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 15:53:35,257 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 15:53:35,257 - base_api.py:[259] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 15:53:35,257 - base_api.py:[261] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:53:35,258 - base_api.py:[272] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 15:53:35,258 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 15:53:35,258 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 15:53:35,258 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 15:53:35,258 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 15:53:35,259 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 15:53:35,259 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 15:53:35,259 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 15:53:35,259 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 15:53:35,275 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:53:35,275 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 15:53:35,291 - base_api.py:[214] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 15:53:35,301 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:53:35,417 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:659b1ef9f3de49bdbf4cbd91533f6235', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:53:35,417 - base_api.py:[241] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:659b1ef9f3de49bdbf4cbd91533f6235', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:53:35,417 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:53:35,417 - base_api.py:[259] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:53:35,417 - base_api.py:[261] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 15:53:35,418 - base_api.py:[247] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 15:53:35,418 - base_api.py:[253] - [INFO] - keys:['sessionid'];keys:sessionid;kw[key]:al:15200000001APP:659b1ef9f3de49bdbf4cbd91533f6235
2022-01-06 15:53:35,426 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 15:53:35,429 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:659b1ef9f3de49bdbf4cbd91533f6235'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:659b1ef9f3de49bdbf4cbd91533f6235'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 15:53:35,554 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 15:53:35,555 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 15:53:35,555 - base_api.py:[259] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 15:53:35,555 - base_api.py:[261] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:53:35,556 - base_api.py:[272] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:659b1ef9f3de49bdbf4cbd91533f6235', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 15:53:35,559 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 15:53:35,560 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 15:53:35,561 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:53:35,562 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:53:35,563 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:53:35,563 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:53:35,564 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 15:53:35,565 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 15:53:35,566 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 15:53:35,566 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 15:53:35,567 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 15:53:35,568 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 15:53:35,569 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 15:53:35,569 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 15:53:35,615 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 15:53:35,615 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 15:53:35,636 - base_api.py:[214] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 15:53:35,645 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:53:35,758 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5811a402e9c94af0aa15620a2a45533e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 15:53:35,758 - base_api.py:[241] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5811a402e9c94af0aa15620a2a45533e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 15:53:35,758 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 15:53:35,759 - base_api.py:[259] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 15:53:35,759 - base_api.py:[261] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 15:53:35,759 - base_api.py:[247] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 15:53:35,759 - base_api.py:[253] - [INFO] - keys:['sessionid'];keys:sessionid;kw[key]:al:15200000001APP:5811a402e9c94af0aa15620a2a45533e
2022-01-06 15:53:35,815 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 15:53:35,834 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:5811a402e9c94af0aa15620a2a45533e'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:5811a402e9c94af0aa15620a2a45533e'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 15:53:35,956 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:7d1419d5-c9e9-497f-8b55-1b8dd002a080'}}}
2022-01-06 15:53:35,957 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 15:53:35,957 - base_api.py:[259] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 15:53:35,957 - base_api.py:[261] - [INFO] - 下游接口名far_api_name为None
2022-01-06 15:53:35,957 - base_api.py:[272] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5811a402e9c94af0aa15620a2a45533e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:7d1419d5-c9e9-497f-8b55-1b8dd002a080'}}}}
2022-01-06 15:53:35,957 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:7d1419d5-c9e9-497f-8b55-1b8dd002a080'}}}
2022-01-06 15:53:35,958 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 15:53:35,959 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 15:53:35,959 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 15:53:35,959 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 15:53:35,959 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 15:53:35,959 - base_api.py:[120] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 15:53:35,960 - base_api.py:[123] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 15:53:36,026 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 15:53:38,894 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 16:02:29,209 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 16:02:29,764 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 16:02:29,777 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:02:29,777 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 16:02:29,784 - base_api.py:[215] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 16:02:29,792 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:29,985 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a84e32bd4afd4330a6baaadffa4ba853', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:02:29,986 - base_api.py:[242] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a84e32bd4afd4330a6baaadffa4ba853', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:02:29,987 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:02:29,987 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:02:29,988 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:02:29,988 - base_api.py:[273] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a84e32bd4afd4330a6baaadffa4ba853', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:02:29,989 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a84e32bd4afd4330a6baaadffa4ba853', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:02:29,993 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 16:02:29,994 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a84e32bd4afd4330a6baaadffa4ba853', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}    code     f"$..code"
2022-01-06 16:02:29,995 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:02:29,996 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:02:29,996 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a84e32bd4afd4330a6baaadffa4ba853', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}    message     f"$..message"
2022-01-06 16:02:29,997 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:02:29,998 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:02:30,018 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:02:30,019 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 16:02:30,025 - base_api.py:[215] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 16:02:30,034 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:30,121 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:02:30,121 - base_api.py:[242] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:02:30,121 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 16:02:30,122 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 16:02:30,122 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:02:30,122 - base_api.py:[273] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:02:30,122 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:02:30,122 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 16:02:30,122 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}    code     f"$..code"
2022-01-06 16:02:30,122 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 16:02:30,122 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 16:02:30,123 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}    message     f"$..message"
2022-01-06 16:02:30,123 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 16:02:30,123 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 16:02:30,123 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}    result     f"$..result"
2022-01-06 16:02:30,123 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 16:02:30,123 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 16:02:30,135 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:02:30,136 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 16:02:30,150 - base_api.py:[215] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 16:02:30,159 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:30,258 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d8aabaf99d824b84b353273d98e184b5', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:02:30,258 - base_api.py:[242] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d8aabaf99d824b84b353273d98e184b5', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:02:30,258 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:02:30,259 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:02:30,259 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 16:02:30,259 - base_api.py:[248] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:02:30,259 - base_api.py:[254] - [INFO] - keys:['sessionid'];key:sessionid;kw[key]:al:15200000001APP:d8aabaf99d824b84b353273d98e184b5
2022-01-06 16:02:30,267 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:02:30,269 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:d8aabaf99d824b84b353273d98e184b5'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:d8aabaf99d824b84b353273d98e184b5'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 16:02:30,424 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:02:30,424 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 16:02:30,424 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 16:02:30,424 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:02:30,425 - base_api.py:[273] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d8aabaf99d824b84b353273d98e184b5', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 16:02:30,440 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:02:30,440 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 16:02:30,441 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}    code     f"$..code"
2022-01-06 16:02:30,456 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:02:30,456 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:02:30,456 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}    message     f"$..message"
2022-01-06 16:02:30,457 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:02:30,458 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:02:30,458 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}    userId     f"$..userId"
2022-01-06 16:02:30,472 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 16:02:30,472 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 16:02:30,473 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}    buyerLevel     f"$..buyerLevel"
2022-01-06 16:02:30,474 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 16:02:30,474 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 16:02:30,474 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}    superior     f"$..superior"
2022-01-06 16:02:30,488 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 16:02:30,488 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 16:02:30,489 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}    inviter     f"$..inviter"
2022-01-06 16:02:30,490 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 16:02:30,490 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 16:02:30,508 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:02:30,508 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 16:02:30,526 - base_api.py:[215] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 16:02:30,535 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:30,641 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eccd1cee15d84d86bdab4c9eb4f4c038', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:02:30,641 - base_api.py:[242] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eccd1cee15d84d86bdab4c9eb4f4c038', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:02:30,641 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:02:30,642 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:02:30,642 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 16:02:30,642 - base_api.py:[248] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:02:30,643 - base_api.py:[254] - [INFO] - keys:['sessionid'];key:sessionid;kw[key]:al:15200000001APP:eccd1cee15d84d86bdab4c9eb4f4c038
2022-01-06 16:02:30,674 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:02:30,683 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:eccd1cee15d84d86bdab4c9eb4f4c038'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:eccd1cee15d84d86bdab4c9eb4f4c038'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:30,797 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d9b12e15-b36b-4be3-b04b-b766d1794253'}}}
2022-01-06 16:02:30,797 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 16:02:30,797 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 16:02:30,797 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:02:30,797 - base_api.py:[273] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eccd1cee15d84d86bdab4c9eb4f4c038', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d9b12e15-b36b-4be3-b04b-b766d1794253'}}}}
2022-01-06 16:02:30,797 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d9b12e15-b36b-4be3-b04b-b766d1794253'}}}
2022-01-06 16:02:30,798 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 16:02:30,798 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d9b12e15-b36b-4be3-b04b-b766d1794253'}}}    code     f"$..code"
2022-01-06 16:02:30,798 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:02:30,798 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:02:30,798 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d9b12e15-b36b-4be3-b04b-b766d1794253'}}}    status     f"$..status"
2022-01-06 16:02:30,799 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 16:02:30,799 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 16:02:30,799 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d9b12e15-b36b-4be3-b04b-b766d1794253'}}}    message     f"$..message"
2022-01-06 16:02:30,799 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:02:30,799 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:02:30,845 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 16:02:33,378 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 16:02:55,236 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 16:02:55,795 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 16:02:55,807 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:02:55,807 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 16:02:55,813 - base_api.py:[215] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 16:02:55,822 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:55,919 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aa014ddba044bd8bcb8cebe5adbfce1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:02:55,919 - base_api.py:[242] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aa014ddba044bd8bcb8cebe5adbfce1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:02:55,919 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:02:55,920 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:02:55,920 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:02:55,920 - base_api.py:[273] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aa014ddba044bd8bcb8cebe5adbfce1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:02:55,920 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aa014ddba044bd8bcb8cebe5adbfce1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:02:55,921 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 16:02:55,921 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aa014ddba044bd8bcb8cebe5adbfce1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}********code********f"$..code"
2022-01-06 16:02:55,921 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:02:55,921 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:02:55,922 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aa014ddba044bd8bcb8cebe5adbfce1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}********message********f"$..message"
2022-01-06 16:02:55,922 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:02:55,922 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:02:55,933 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:02:55,933 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 16:02:55,940 - base_api.py:[215] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 16:02:55,949 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:56,073 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:02:56,074 - base_api.py:[242] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:02:56,074 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 16:02:56,074 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 16:02:56,074 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:02:56,074 - base_api.py:[273] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:02:56,074 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:02:56,075 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 16:02:56,075 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}********code********f"$..code"
2022-01-06 16:02:56,075 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 16:02:56,075 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 16:02:56,075 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}********message********f"$..message"
2022-01-06 16:02:56,075 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 16:02:56,075 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 16:02:56,076 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}********result********f"$..result"
2022-01-06 16:02:56,076 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 16:02:56,076 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 16:02:56,086 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:02:56,086 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 16:02:56,099 - base_api.py:[215] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 16:02:56,111 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:56,217 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:87ce1b2bc830425fb7bb75062386bf13', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:02:56,217 - base_api.py:[242] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:87ce1b2bc830425fb7bb75062386bf13', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:02:56,217 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:02:56,217 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:02:56,217 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 16:02:56,218 - base_api.py:[248] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:02:56,218 - base_api.py:[254] - [INFO] - keys:['sessionid'];key:sessionid;kw[key]:al:15200000001APP:87ce1b2bc830425fb7bb75062386bf13
2022-01-06 16:02:56,229 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:02:56,231 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:87ce1b2bc830425fb7bb75062386bf13'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:87ce1b2bc830425fb7bb75062386bf13'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 16:02:56,350 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:02:56,350 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 16:02:56,350 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 16:02:56,351 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:02:56,351 - base_api.py:[273] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:87ce1b2bc830425fb7bb75062386bf13', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 16:02:56,365 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:02:56,365 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 16:02:56,365 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}********code********f"$..code"
2022-01-06 16:02:56,381 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:02:56,381 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:02:56,381 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}********message********f"$..message"
2022-01-06 16:02:56,382 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:02:56,382 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:02:56,382 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}********userId********f"$..userId"
2022-01-06 16:02:56,397 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 16:02:56,397 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 16:02:56,398 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}********buyerLevel********f"$..buyerLevel"
2022-01-06 16:02:56,398 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 16:02:56,398 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 16:02:56,398 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}********superior********f"$..superior"
2022-01-06 16:02:56,412 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 16:02:56,413 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 16:02:56,413 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}********inviter********f"$..inviter"
2022-01-06 16:02:56,413 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 16:02:56,414 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 16:02:56,432 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:02:56,432 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 16:02:56,450 - base_api.py:[215] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 16:02:56,459 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:56,548 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c585305a243140648a486260fb1c623a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:02:56,548 - base_api.py:[242] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c585305a243140648a486260fb1c623a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:02:56,548 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:02:56,548 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:02:56,548 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 16:02:56,548 - base_api.py:[248] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:02:56,549 - base_api.py:[254] - [INFO] - keys:['sessionid'];key:sessionid;kw[key]:al:15200000001APP:c585305a243140648a486260fb1c623a
2022-01-06 16:02:56,567 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:02:56,577 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:c585305a243140648a486260fb1c623a'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:c585305a243140648a486260fb1c623a'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:02:56,677 - base_api.py:[92] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e58ecb86-54a1-4ff4-8d23-bd500bdd309b'}}}
2022-01-06 16:02:56,677 - base_api.py:[259] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 16:02:56,677 - base_api.py:[260] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 16:02:56,677 - base_api.py:[262] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:02:56,677 - base_api.py:[273] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c585305a243140648a486260fb1c623a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e58ecb86-54a1-4ff4-8d23-bd500bdd309b'}}}}
2022-01-06 16:02:56,678 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e58ecb86-54a1-4ff4-8d23-bd500bdd309b'}}}
2022-01-06 16:02:56,678 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 16:02:56,678 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e58ecb86-54a1-4ff4-8d23-bd500bdd309b'}}}********code********f"$..code"
2022-01-06 16:02:56,678 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:02:56,679 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:02:56,679 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e58ecb86-54a1-4ff4-8d23-bd500bdd309b'}}}********status********f"$..status"
2022-01-06 16:02:56,679 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 16:02:56,679 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 16:02:56,679 - base_api.py:[119] - [INFO] - 提取json数据{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e58ecb86-54a1-4ff4-8d23-bd500bdd309b'}}}********message********f"$..message"
2022-01-06 16:02:56,679 - base_api.py:[121] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:02:56,679 - base_api.py:[124] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:02:56,727 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 16:02:59,392 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 16:17:41,225 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 16:17:41,782 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 16:17:41,795 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:17:41,795 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 16:17:41,801 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 16:17:41,810 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:17:41,811 - base_api.py:[88] - [INFO] - None
2022-01-06 16:17:41,928 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:db18ceec80d149718397e0a82d209530', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:17:41,929 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:db18ceec80d149718397e0a82d209530', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:17:41,929 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:17:41,929 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:17:41,929 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:17:41,929 - base_api.py:[274] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:db18ceec80d149718397e0a82d209530', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:17:41,929 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:db18ceec80d149718397e0a82d209530', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:17:41,930 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 16:17:41,930 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:17:41,931 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:17:41,931 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:17:41,931 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:17:41,942 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:17:41,943 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 16:17:41,951 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 16:17:41,963 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:17:41,963 - base_api.py:[88] - [INFO] - None
2022-01-06 16:17:42,051 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:17:42,052 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:17:42,052 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 16:17:42,053 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 16:17:42,053 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:17:42,054 - base_api.py:[274] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:17:42,054 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:17:42,055 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 16:17:42,056 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 16:17:42,057 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 16:17:42,058 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 16:17:42,058 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 16:17:42,059 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 16:17:42,060 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 16:17:42,092 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:17:42,092 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 16:17:42,111 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 16:17:42,120 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:17:42,121 - base_api.py:[88] - [INFO] - None
2022-01-06 16:17:42,215 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d3b78bc949d24b22a727245d7bcc650b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:17:42,215 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d3b78bc949d24b22a727245d7bcc650b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:17:42,215 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:17:42,216 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:17:42,216 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 16:17:42,216 - base_api.py:[249] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:17:42,216 - base_api.py:[255] - [INFO] - keys:['sessionid'];key:sessionid;kw[key]:al:15200000001APP:d3b78bc949d24b22a727245d7bcc650b
2022-01-06 16:17:42,227 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:17:42,230 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:d3b78bc949d24b22a727245d7bcc650b'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:d3b78bc949d24b22a727245d7bcc650b'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 16:17:42,230 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:d3b78bc949d24b22a727245d7bcc650b'}
2022-01-06 16:17:42,341 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:17:42,342 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 16:17:42,342 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 16:17:42,342 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:17:42,342 - base_api.py:[274] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d3b78bc949d24b22a727245d7bcc650b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 16:17:42,356 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:17:42,357 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 16:17:42,357 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:17:42,357 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:17:42,358 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:17:42,358 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:17:42,359 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 16:17:42,359 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 16:17:42,359 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 16:17:42,359 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 16:17:42,360 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 16:17:42,360 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 16:17:42,360 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 16:17:42,361 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 16:17:42,378 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:17:42,379 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 16:17:42,397 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 16:17:42,408 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:17:42,408 - base_api.py:[88] - [INFO] - None
2022-01-06 16:17:42,504 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40d2d8f4ff0849f9bc0c3da13b7a48a3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:17:42,504 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40d2d8f4ff0849f9bc0c3da13b7a48a3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:17:42,504 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:17:42,504 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:17:42,504 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 16:17:42,504 - base_api.py:[249] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:17:42,505 - base_api.py:[255] - [INFO] - keys:['sessionid'];key:sessionid;kw[key]:al:15200000001APP:40d2d8f4ff0849f9bc0c3da13b7a48a3
2022-01-06 16:17:42,530 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:17:42,545 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:40d2d8f4ff0849f9bc0c3da13b7a48a3'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:40d2d8f4ff0849f9bc0c3da13b7a48a3'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:17:42,545 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:40d2d8f4ff0849f9bc0c3da13b7a48a3'}
2022-01-06 16:17:42,643 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:48aab48a-f4d7-49fa-a433-1684d2d0aa13'}}}
2022-01-06 16:17:42,643 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 16:17:42,643 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 16:17:42,643 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:17:42,644 - base_api.py:[274] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40d2d8f4ff0849f9bc0c3da13b7a48a3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:48aab48a-f4d7-49fa-a433-1684d2d0aa13'}}}}
2022-01-06 16:17:42,644 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:48aab48a-f4d7-49fa-a433-1684d2d0aa13'}}}
2022-01-06 16:17:42,644 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 16:17:42,645 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:17:42,645 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:17:42,645 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 16:17:42,645 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 16:17:42,645 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:17:42,645 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:17:42,695 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 16:17:45,252 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 16:24:50,998 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 16:24:51,561 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 16:24:51,574 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:24:51,574 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 16:24:51,580 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 16:24:51,589 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:24:51,589 - base_api.py:[88] - [INFO] - None
2022-01-06 16:24:51,884 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4fa779c2f1444955b107bb9dc58565c3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:24:51,884 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4fa779c2f1444955b107bb9dc58565c3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:24:51,884 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:24:51,884 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:24:51,884 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:24:51,885 - base_api.py:[274] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4fa779c2f1444955b107bb9dc58565c3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:24:51,885 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4fa779c2f1444955b107bb9dc58565c3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:24:51,886 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 16:24:51,886 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:24:51,886 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:24:51,886 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:24:51,886 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:24:51,896 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:24:51,896 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 16:24:51,902 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 16:24:51,911 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:24:51,911 - base_api.py:[88] - [INFO] - None
2022-01-06 16:24:52,177 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:24:52,177 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:24:52,178 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 16:24:52,178 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 16:24:52,178 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:24:52,178 - base_api.py:[274] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:24:52,178 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:24:52,178 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 16:24:52,178 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 16:24:52,179 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 16:24:52,179 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 16:24:52,179 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 16:24:52,179 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 16:24:52,179 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 16:24:52,191 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:24:52,191 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 16:24:52,204 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 16:24:52,214 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:24:52,214 - base_api.py:[88] - [INFO] - None
2022-01-06 16:24:52,330 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c2ccc11ac0c94e57b0a6630050e7e6ab', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:24:52,331 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c2ccc11ac0c94e57b0a6630050e7e6ab', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:24:52,331 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:24:52,331 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:24:52,331 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 16:24:52,331 - base_api.py:[249] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:24:52,332 - base_api.py:[255] - [INFO] - keys:['sessionid'];key:sessionid;kw[key]:al:15200000001APP:c2ccc11ac0c94e57b0a6630050e7e6ab;kw:{'sessionid': 'al:15200000001APP:c2ccc11ac0c94e57b0a6630050e7e6ab'}
2022-01-06 16:24:52,349 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:24:52,354 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:c2ccc11ac0c94e57b0a6630050e7e6ab'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:c2ccc11ac0c94e57b0a6630050e7e6ab'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 16:24:52,354 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:c2ccc11ac0c94e57b0a6630050e7e6ab'}
2022-01-06 16:24:52,482 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:24:52,482 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 16:24:52,482 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 16:24:52,482 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:24:52,482 - base_api.py:[274] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c2ccc11ac0c94e57b0a6630050e7e6ab', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 16:24:52,492 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:24:52,493 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 16:24:52,494 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:24:52,494 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:24:52,494 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:24:52,495 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:24:52,495 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 16:24:52,495 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 16:24:52,496 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 16:24:52,496 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 16:24:52,496 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 16:24:52,496 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 16:24:52,497 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 16:24:52,497 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 16:24:52,514 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:24:52,514 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 16:24:52,535 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 16:24:52,546 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:24:52,546 - base_api.py:[88] - [INFO] - None
2022-01-06 16:24:52,643 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:dad5a61925aa47138c42b39261c63f3b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:24:52,643 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:dad5a61925aa47138c42b39261c63f3b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:24:52,643 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:24:52,643 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:24:52,643 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 16:24:52,644 - base_api.py:[249] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:24:52,644 - base_api.py:[255] - [INFO] - keys:['sessionid'];key:sessionid;kw[key]:al:15200000001APP:dad5a61925aa47138c42b39261c63f3b;kw:{'sessionid': 'al:15200000001APP:dad5a61925aa47138c42b39261c63f3b'}
2022-01-06 16:24:52,660 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:24:52,670 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:dad5a61925aa47138c42b39261c63f3b'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:dad5a61925aa47138c42b39261c63f3b'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:24:52,670 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:dad5a61925aa47138c42b39261c63f3b'}
2022-01-06 16:24:52,779 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e66208ec-051d-4973-b2f3-1e89244b22f7'}}}
2022-01-06 16:24:52,780 - base_api.py:[260] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 16:24:52,780 - base_api.py:[261] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 16:24:52,780 - base_api.py:[263] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:24:52,780 - base_api.py:[274] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:dad5a61925aa47138c42b39261c63f3b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e66208ec-051d-4973-b2f3-1e89244b22f7'}}}}
2022-01-06 16:24:52,780 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e66208ec-051d-4973-b2f3-1e89244b22f7'}}}
2022-01-06 16:24:52,781 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 16:24:52,781 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:24:52,781 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:24:52,781 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 16:24:52,781 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 16:24:52,782 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:24:52,782 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:24:52,831 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 16:24:55,363 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 16:28:50,647 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 16:28:51,356 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 16:28:53,655 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 16:29:10,114 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 16:29:10,657 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 16:29:10,670 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:29:10,671 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 16:29:10,677 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 16:29:10,686 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:29:10,686 - base_api.py:[88] - [INFO] - None
2022-01-06 16:29:10,814 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8a7e55e263ad498199c17c9e4eecd119', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:29:10,814 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8a7e55e263ad498199c17c9e4eecd119', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:29:10,814 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:29:10,815 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:29:10,815 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:29:10,815 - base_api.py:[276] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8a7e55e263ad498199c17c9e4eecd119', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:29:10,816 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8a7e55e263ad498199c17c9e4eecd119', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:29:10,818 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 16:29:10,819 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:29:10,819 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:29:10,820 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:29:10,820 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:29:10,844 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:29:10,844 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 16:29:10,850 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 16:29:10,859 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:29:10,860 - base_api.py:[88] - [INFO] - None
2022-01-06 16:29:10,953 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:29:10,953 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:29:10,954 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 16:29:10,954 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 16:29:10,954 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:29:10,955 - base_api.py:[276] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:29:10,955 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:29:10,955 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 16:29:10,956 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 16:29:10,956 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 16:29:10,957 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 16:29:10,957 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 16:29:10,957 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 16:29:10,958 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 16:29:10,991 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:29:10,991 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 16:29:11,010 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 16:29:11,022 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:29:11,022 - base_api.py:[88] - [INFO] - None
2022-01-06 16:29:11,145 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:79860c72b2064a1f850778e04e8c5757', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:29:11,145 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:79860c72b2064a1f850778e04e8c5757', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:29:11,146 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:29:11,146 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:29:11,146 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 16:29:11,146 - base_api.py:[250] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:29:11,223 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:29:11,224 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 16:29:11,243 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 16:29:11,251 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:29:11,251 - base_api.py:[88] - [INFO] - None
2022-01-06 16:29:11,345 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:088a01991325471aabb0ca2b388b894b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:29:11,345 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:088a01991325471aabb0ca2b388b894b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:29:11,345 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:29:11,345 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:29:11,345 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 16:29:11,345 - base_api.py:[250] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:29:11,416 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 16:29:14,081 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 16:30:04,481 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 16:30:05,035 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 16:30:05,048 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:30:05,048 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 16:30:05,054 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 16:30:05,063 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:30:05,063 - base_api.py:[88] - [INFO] - None
2022-01-06 16:30:05,169 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0635d1d8f35242639fa32ca97672b24c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:30:05,169 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0635d1d8f35242639fa32ca97672b24c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:30:05,170 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:30:05,170 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:30:05,170 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:30:05,170 - base_api.py:[276] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0635d1d8f35242639fa32ca97672b24c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:30:05,170 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0635d1d8f35242639fa32ca97672b24c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:30:05,171 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 16:30:05,171 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:30:05,171 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:30:05,171 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:30:05,172 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:30:05,182 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:30:05,183 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 16:30:05,189 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 16:30:05,204 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:30:05,204 - base_api.py:[88] - [INFO] - None
2022-01-06 16:30:05,292 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:30:05,293 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:30:05,293 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 16:30:05,293 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 16:30:05,293 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:30:05,293 - base_api.py:[276] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 16:30:05,293 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 16:30:05,293 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 16:30:05,294 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 16:30:05,294 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 16:30:05,294 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 16:30:05,294 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 16:30:05,294 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 16:30:05,294 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 16:30:05,305 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:30:05,305 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 16:30:05,319 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 16:30:05,328 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:30:05,328 - base_api.py:[88] - [INFO] - None
2022-01-06 16:30:05,422 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cb5c5dd4b0dc4c10852e134f1c778659', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:30:05,422 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cb5c5dd4b0dc4c10852e134f1c778659', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:30:05,422 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:30:05,422 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:30:05,422 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 16:30:05,422 - base_api.py:[250] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:30:05,422 - base_api.py:[254] - [INFO] - json串:{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cb5c5dd4b0dc4c10852e134f1c778659', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}};;需匹配key:sessionid
2022-01-06 16:30:05,433 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:30:05,437 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:cb5c5dd4b0dc4c10852e134f1c778659'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:cb5c5dd4b0dc4c10852e134f1c778659'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 16:30:05,437 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:cb5c5dd4b0dc4c10852e134f1c778659'}
2022-01-06 16:30:05,574 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:30:05,574 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 16:30:05,574 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 16:30:05,574 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:30:05,575 - base_api.py:[276] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cb5c5dd4b0dc4c10852e134f1c778659', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 16:30:05,577 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 16:30:05,577 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 16:30:05,578 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:30:05,578 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:30:05,579 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:30:05,579 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:30:05,579 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 16:30:05,579 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 16:30:05,580 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 16:30:05,580 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 16:30:05,581 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 16:30:05,581 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 16:30:05,582 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 16:30:05,582 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 16:30:05,599 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 16:30:05,599 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 16:30:05,619 - base_api.py:[216] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 16:30:05,628 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:30:05,628 - base_api.py:[88] - [INFO] - None
2022-01-06 16:30:05,723 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2ce932862640421094dd16148eda8ef8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 16:30:05,723 - base_api.py:[243] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2ce932862640421094dd16148eda8ef8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 16:30:05,723 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 16:30:05,724 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 16:30:05,724 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 16:30:05,724 - base_api.py:[250] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 16:30:05,724 - base_api.py:[254] - [INFO] - json串:{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2ce932862640421094dd16148eda8ef8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}};;需匹配key:sessionid
2022-01-06 16:30:05,749 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 16:30:05,760 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:2ce932862640421094dd16148eda8ef8'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:2ce932862640421094dd16148eda8ef8'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 16:30:05,760 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:2ce932862640421094dd16148eda8ef8'}
2022-01-06 16:30:05,860 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:4f3c7eb7-7584-4606-9f6d-6f19e8c11802'}}}
2022-01-06 16:30:05,861 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 16:30:05,861 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 16:30:05,861 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为None
2022-01-06 16:30:05,862 - base_api.py:[276] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2ce932862640421094dd16148eda8ef8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:4f3c7eb7-7584-4606-9f6d-6f19e8c11802'}}}}
2022-01-06 16:30:05,862 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:4f3c7eb7-7584-4606-9f6d-6f19e8c11802'}}}
2022-01-06 16:30:05,862 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 16:30:05,863 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 16:30:05,863 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 16:30:05,863 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 16:30:05,863 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 16:30:05,863 - base_api.py:[122] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 16:30:05,863 - base_api.py:[125] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 16:30:05,917 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 16:30:08,336 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 17:05:21,523 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 17:05:22,102 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 17:05:22,115 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:05:22,116 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 17:05:22,122 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 17:05:22,132 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:05:22,132 - base_api.py:[88] - [INFO] - None
2022-01-06 17:05:26,499 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:bb31c3d4528746a6ac74887318a90879', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:05:26,500 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:bb31c3d4528746a6ac74887318a90879', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:05:26,501 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:05:26,502 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:05:26,502 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:05:26,503 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:bb31c3d4528746a6ac74887318a90879', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:05:26,503 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:bb31c3d4528746a6ac74887318a90879', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:05:26,507 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 17:05:26,508 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message'])
2022-01-06 17:05:26,509 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:05:26,510 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:05:26,510 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:05:26,511 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:05:26,539 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:05:26,539 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 17:05:26,545 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 17:05:26,554 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:05:26,554 - base_api.py:[88] - [INFO] - None
2022-01-06 17:05:26,687 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:05:26,687 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:05:26,688 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 17:05:26,688 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 17:05:26,689 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:05:26,690 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:05:26,690 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:05:26,691 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 17:05:26,692 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message', 'result'])
2022-01-06 17:05:26,692 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 17:05:26,693 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 17:05:26,693 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 17:05:26,694 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 17:05:26,694 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 17:05:26,694 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 17:05:26,721 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:05:26,721 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 17:05:26,736 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 17:05:26,748 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:05:26,748 - base_api.py:[88] - [INFO] - None
2022-01-06 17:05:26,914 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:594fb2f274cd4bd89393c89b5c0a3e3a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:05:26,914 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:594fb2f274cd4bd89393c89b5c0a3e3a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:05:26,915 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:05:26,915 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:05:26,915 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 17:05:26,915 - base_api.py:[251] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:05:26,925 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:05:26,928 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:594fb2f274cd4bd89393c89b5c0a3e3a'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:594fb2f274cd4bd89393c89b5c0a3e3a'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:05:26,928 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:594fb2f274cd4bd89393c89b5c0a3e3a'}
2022-01-06 17:05:27,057 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:05:27,058 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 17:05:27,059 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 17:05:27,059 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:05:27,060 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:594fb2f274cd4bd89393c89b5c0a3e3a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 17:05:27,064 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:05:27,065 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 17:05:27,066 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message', 'userId', 'buyerLevel', 'superior', 'inviter'])
2022-01-06 17:05:27,068 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:05:27,069 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:05:27,071 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:05:27,071 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:05:27,073 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 17:05:27,074 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 17:05:27,076 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 17:05:27,076 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 17:05:27,078 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 17:05:27,079 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 17:05:27,081 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 17:05:27,081 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 17:05:27,116 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:05:27,116 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 17:05:27,133 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 17:05:27,142 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:05:27,142 - base_api.py:[88] - [INFO] - None
2022-01-06 17:05:27,403 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:513cd2b447a84ae498a7db69b97e6e38', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:05:27,404 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:513cd2b447a84ae498a7db69b97e6e38', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:05:27,404 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:05:27,404 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:05:27,404 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 17:05:27,405 - base_api.py:[251] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:05:27,436 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:05:27,446 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:513cd2b447a84ae498a7db69b97e6e38'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:513cd2b447a84ae498a7db69b97e6e38'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:05:27,446 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:513cd2b447a84ae498a7db69b97e6e38'}
2022-01-06 17:05:27,743 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:af162ecb-2140-46a3-a880-066790e5a8e2'}}}
2022-01-06 17:05:27,743 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 17:05:27,744 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 17:05:27,745 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:05:27,745 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:513cd2b447a84ae498a7db69b97e6e38', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:af162ecb-2140-46a3-a880-066790e5a8e2'}}}}
2022-01-06 17:05:27,746 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:af162ecb-2140-46a3-a880-066790e5a8e2'}}}
2022-01-06 17:05:27,749 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 17:05:27,750 - base_api.py:[117] - [INFO] - dict_keys(['code', 'status', 'message'])
2022-01-06 17:05:27,750 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:05:27,751 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:05:27,752 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 17:05:27,752 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 17:05:27,753 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:05:27,753 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:05:27,819 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 17:05:30,666 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 17:12:38,257 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 17:12:38,804 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 17:12:38,817 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:12:38,817 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 17:12:38,823 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 17:12:38,832 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:12:38,833 - base_api.py:[88] - [INFO] - None
2022-01-06 17:12:38,951 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0370045e228845eea1d5c0d67bf41814', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:12:38,951 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0370045e228845eea1d5c0d67bf41814', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:12:38,951 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:12:38,951 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:12:38,952 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:12:38,952 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0370045e228845eea1d5c0d67bf41814', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:12:38,952 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0370045e228845eea1d5c0d67bf41814', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:12:38,953 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 17:12:38,953 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message'])
2022-01-06 17:12:38,953 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:12:38,953 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:12:38,953 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:12:38,953 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:12:38,964 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:12:38,965 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 17:12:38,972 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 17:12:38,981 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:12:38,981 - base_api.py:[88] - [INFO] - None
2022-01-06 17:12:39,073 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:12:39,073 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:12:39,073 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 17:12:39,073 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 17:12:39,073 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:12:39,074 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:12:39,074 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:12:39,074 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 17:12:39,074 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message', 'result'])
2022-01-06 17:12:39,074 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 17:12:39,074 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 17:12:39,074 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 17:12:39,075 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 17:12:39,075 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 17:12:39,075 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 17:12:39,085 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:12:39,085 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 17:12:39,097 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 17:12:39,106 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:12:39,106 - base_api.py:[88] - [INFO] - None
2022-01-06 17:12:39,225 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8f377c6b1b8f411d82307c049d4c13ca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:12:39,225 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8f377c6b1b8f411d82307c049d4c13ca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:12:39,225 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:12:39,226 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:12:39,226 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 17:12:39,226 - base_api.py:[251] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:12:39,233 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:12:39,236 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:8f377c6b1b8f411d82307c049d4c13ca'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:8f377c6b1b8f411d82307c049d4c13ca'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:12:39,236 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:8f377c6b1b8f411d82307c049d4c13ca'}
2022-01-06 17:12:39,404 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:12:39,405 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 17:12:39,406 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 17:12:39,406 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:12:39,408 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8f377c6b1b8f411d82307c049d4c13ca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 17:12:39,409 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:12:39,424 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 17:12:39,425 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message', 'userId', 'buyerLevel', 'superior', 'inviter'])
2022-01-06 17:12:39,427 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:12:39,427 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:12:39,429 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:12:39,430 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:12:39,432 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 17:12:39,432 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 17:12:39,433 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 17:12:39,434 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 17:12:39,435 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 17:12:39,435 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 17:12:39,436 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 17:12:39,437 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 17:12:39,472 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:12:39,472 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 17:12:39,494 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 17:12:39,505 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:12:39,505 - base_api.py:[88] - [INFO] - None
2022-01-06 17:12:39,600 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2497cc63791f4143859ae23323bc4319', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:12:39,601 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2497cc63791f4143859ae23323bc4319', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:12:39,601 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:12:39,601 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:12:39,601 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 17:12:39,601 - base_api.py:[251] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:12:39,625 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:12:39,640 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:2497cc63791f4143859ae23323bc4319'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:2497cc63791f4143859ae23323bc4319'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:12:39,640 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:2497cc63791f4143859ae23323bc4319'}
2022-01-06 17:12:39,787 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:a6d7abcf-910b-4752-acab-9e7f02ee599a'}}}
2022-01-06 17:12:39,787 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 17:12:39,787 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 17:12:39,788 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:12:39,788 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2497cc63791f4143859ae23323bc4319', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:a6d7abcf-910b-4752-acab-9e7f02ee599a'}}}}
2022-01-06 17:12:39,788 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:a6d7abcf-910b-4752-acab-9e7f02ee599a'}}}
2022-01-06 17:12:39,790 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 17:12:39,790 - base_api.py:[117] - [INFO] - dict_keys(['code', 'status', 'message'])
2022-01-06 17:12:39,790 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:12:39,790 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:12:39,791 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 17:12:39,791 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 17:12:39,791 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:12:39,791 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:12:39,839 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 17:12:42,278 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 17:13:39,244 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 17:13:39,796 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 17:13:39,808 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:13:39,808 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 17:13:39,814 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 17:13:39,823 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:13:39,823 - base_api.py:[88] - [INFO] - None
2022-01-06 17:13:39,929 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a85e841afb0443dfadf2c4ab35afdcfa', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:13:39,929 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a85e841afb0443dfadf2c4ab35afdcfa', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:13:39,929 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:13:39,929 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:13:39,929 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:13:39,929 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a85e841afb0443dfadf2c4ab35afdcfa', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:13:39,929 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a85e841afb0443dfadf2c4ab35afdcfa', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:13:39,930 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 17:13:39,930 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message'])
2022-01-06 17:13:39,931 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:13:39,931 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:13:39,931 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:13:39,931 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:13:39,943 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:13:39,943 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 17:13:39,951 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 17:13:39,964 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:13:39,964 - base_api.py:[88] - [INFO] - None
2022-01-06 17:13:40,078 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:13:40,078 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:13:40,078 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 17:13:40,078 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 17:13:40,079 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:13:40,079 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:13:40,079 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:13:40,079 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 17:13:40,079 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message', 'result'])
2022-01-06 17:13:40,079 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 17:13:40,079 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 17:13:40,080 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 17:13:40,080 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 17:13:40,080 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 17:13:40,080 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 17:13:40,092 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:13:40,092 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 17:13:40,105 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 17:13:40,113 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:13:40,114 - base_api.py:[88] - [INFO] - None
2022-01-06 17:13:40,236 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:82fc24b27bd04c438e4aff37a838576d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:13:40,237 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:82fc24b27bd04c438e4aff37a838576d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:13:40,237 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:13:40,237 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:13:40,237 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 17:13:40,238 - base_api.py:[251] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:13:40,247 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:13:40,250 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:82fc24b27bd04c438e4aff37a838576d'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:82fc24b27bd04c438e4aff37a838576d'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:13:40,251 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:82fc24b27bd04c438e4aff37a838576d'}
2022-01-06 17:13:40,362 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:13:40,363 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 17:13:40,363 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 17:13:40,363 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:13:40,363 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:82fc24b27bd04c438e4aff37a838576d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 17:13:40,371 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:13:40,372 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 17:13:40,372 - base_api.py:[117] - [INFO] - dict_keys(['code', 'message', 'userId', 'buyerLevel', 'superior', 'inviter'])
2022-01-06 17:13:40,374 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:13:40,374 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:13:40,375 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:13:40,375 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:13:40,377 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 17:13:40,377 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 17:13:40,378 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 17:13:40,378 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 17:13:40,380 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 17:13:40,380 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 17:13:40,381 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 17:13:40,381 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 17:13:40,406 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:13:40,406 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 17:13:40,424 - base_api.py:[217] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 17:13:40,432 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:13:40,432 - base_api.py:[88] - [INFO] - None
2022-01-06 17:13:40,532 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eb71ddd446ea49ec94bc721bc55760ae', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:13:40,532 - base_api.py:[244] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eb71ddd446ea49ec94bc721bc55760ae', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:13:40,532 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:13:40,532 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:13:40,533 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 17:13:40,533 - base_api.py:[251] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid', 'isCertification']}
2022-01-06 17:13:40,552 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid', 'isCertification'])
2022-01-06 17:13:40,553 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid', 'isCertification'])
2022-01-06 17:13:40,563 - base_api.py:[87] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:eb71ddd446ea49ec94bc721bc55760ae'", 'isCertification': 1}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid', 'isCertification']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:eb71ddd446ea49ec94bc721bc55760ae'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:13:40,563 - base_api.py:[88] - [INFO] - {'app-sessionid': 'al:15200000001APP:eb71ddd446ea49ec94bc721bc55760ae'}
2022-01-06 17:13:40,691 - base_api.py:[93] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:b092002a-49ff-41bd-a06a-40e6fd8257d7'}}}
2022-01-06 17:13:40,692 - base_api.py:[264] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 17:13:40,692 - base_api.py:[265] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 17:13:40,692 - base_api.py:[267] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:13:40,692 - base_api.py:[278] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eb71ddd446ea49ec94bc721bc55760ae', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:b092002a-49ff-41bd-a06a-40e6fd8257d7'}}}}
2022-01-06 17:13:40,692 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:b092002a-49ff-41bd-a06a-40e6fd8257d7'}}}
2022-01-06 17:13:40,693 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 17:13:40,693 - base_api.py:[117] - [INFO] - dict_keys(['code', 'status', 'message'])
2022-01-06 17:13:40,693 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:13:40,694 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:13:40,694 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 17:13:40,694 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 17:13:40,694 - base_api.py:[123] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:13:40,694 - base_api.py:[126] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:13:40,737 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 17:13:43,077 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 17:16:50,903 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 17:16:51,464 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 17:16:51,477 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:16:51,478 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 17:16:51,484 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 17:16:51,493 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:16:51,493 - base_api.py:[89] - [INFO] - None
2022-01-06 17:16:51,601 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6f058e2cd45549d6ba80789ed63c867d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:16:51,601 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6f058e2cd45549d6ba80789ed63c867d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:16:51,601 - base_api.py:[265] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:16:51,602 - base_api.py:[266] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:16:51,602 - base_api.py:[268] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:16:51,602 - base_api.py:[279] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6f058e2cd45549d6ba80789ed63c867d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:16:51,603 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6f058e2cd45549d6ba80789ed63c867d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:16:51,606 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 17:16:51,607 - base_api.py:[118] - [INFO] - dict_keys(['code', 'message'])
2022-01-06 17:16:51,607 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:16:51,608 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:16:51,608 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:16:51,609 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:16:51,620 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:16:51,621 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 17:16:51,628 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 17:16:51,638 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:16:51,638 - base_api.py:[89] - [INFO] - None
2022-01-06 17:16:51,727 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:16:51,728 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:16:51,728 - base_api.py:[265] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 17:16:51,728 - base_api.py:[266] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 17:16:51,728 - base_api.py:[268] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:16:51,728 - base_api.py:[279] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:16:51,728 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:16:51,728 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 17:16:51,728 - base_api.py:[118] - [INFO] - dict_keys(['code', 'message', 'result'])
2022-01-06 17:16:51,729 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 17:16:51,729 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 17:16:51,729 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 17:16:51,729 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 17:16:51,729 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 17:16:51,729 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 17:16:51,754 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:16:51,755 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 17:16:51,770 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 17:16:51,779 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:16:51,779 - base_api.py:[89] - [INFO] - None
2022-01-06 17:16:51,886 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f9a8e5d463974c6b955b92b1c14c788c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:16:51,886 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f9a8e5d463974c6b955b92b1c14c788c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:16:51,886 - base_api.py:[265] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:16:51,887 - base_api.py:[266] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:16:51,887 - base_api.py:[268] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 17:16:51,887 - base_api.py:[252] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:16:51,909 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:16:51,912 - base_api.py:[83] - [INFO] - kwargs:{'sessionid': "'al:15200000001APP:f9a8e5d463974c6b955b92b1c14c788c'"}api_datas:{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:f9a8e5d463974c6b955b92b1c14c788c'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:16:51,912 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:f9a8e5d463974c6b955b92b1c14c788c'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:f9a8e5d463974c6b955b92b1c14c788c'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:16:51,912 - base_api.py:[89] - [INFO] - {'app-sessionid': 'al:15200000001APP:f9a8e5d463974c6b955b92b1c14c788c'}
2022-01-06 17:16:52,113 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:16:52,113 - base_api.py:[265] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 17:16:52,114 - base_api.py:[266] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 17:16:52,114 - base_api.py:[268] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:16:52,114 - base_api.py:[279] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f9a8e5d463974c6b955b92b1c14c788c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 17:16:52,119 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:16:52,119 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 17:16:52,119 - base_api.py:[118] - [INFO] - dict_keys(['code', 'message', 'userId', 'buyerLevel', 'superior', 'inviter'])
2022-01-06 17:16:52,120 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:16:52,120 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:16:52,122 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:16:52,122 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:16:52,124 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 17:16:52,125 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 17:16:52,126 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 17:16:52,127 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 17:16:52,129 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 17:16:52,129 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 17:16:52,131 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 17:16:52,131 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 17:16:52,178 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:16:52,178 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 17:16:52,199 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 17:16:52,208 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:16:52,208 - base_api.py:[89] - [INFO] - None
2022-01-06 17:16:52,374 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4a675073b6374112a801339d4bb0fc0f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:16:52,374 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4a675073b6374112a801339d4bb0fc0f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:16:52,374 - base_api.py:[265] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:16:52,374 - base_api.py:[266] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:16:52,374 - base_api.py:[268] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 17:16:52,374 - base_api.py:[252] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid', 'isCertification']}
2022-01-06 17:16:52,395 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid', 'isCertification'])
2022-01-06 17:16:52,395 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid', 'isCertification'])
2022-01-06 17:16:52,409 - base_api.py:[83] - [INFO] - kwargs:{'sessionid': "'al:15200000001APP:4a675073b6374112a801339d4bb0fc0f'", 'isCertification': 1}api_datas:{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid', 'isCertification']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:4a675073b6374112a801339d4bb0fc0f'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:16:52,409 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:4a675073b6374112a801339d4bb0fc0f'", 'isCertification': 1}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid', 'isCertification']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:4a675073b6374112a801339d4bb0fc0f'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:16:52,419 - base_api.py:[89] - [INFO] - {'app-sessionid': 'al:15200000001APP:4a675073b6374112a801339d4bb0fc0f'}
2022-01-06 17:16:52,522 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:b9229344-ecef-4fc0-a06d-48385f0c8fc6'}}}
2022-01-06 17:16:52,522 - base_api.py:[265] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 17:16:52,522 - base_api.py:[266] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 17:16:52,522 - base_api.py:[268] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:16:52,522 - base_api.py:[279] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4a675073b6374112a801339d4bb0fc0f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:b9229344-ecef-4fc0-a06d-48385f0c8fc6'}}}}
2022-01-06 17:16:52,522 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:b9229344-ecef-4fc0-a06d-48385f0c8fc6'}}}
2022-01-06 17:16:52,523 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 17:16:52,523 - base_api.py:[118] - [INFO] - dict_keys(['code', 'status', 'message'])
2022-01-06 17:16:52,524 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:16:52,524 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:16:52,524 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 17:16:52,524 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 17:16:52,524 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:16:52,524 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:16:52,563 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 17:16:55,261 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 17:18:45,527 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 17:18:46,110 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 17:18:46,123 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:18:46,123 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 17:18:46,129 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 17:18:46,139 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:46,139 - base_api.py:[89] - [INFO] - None
2022-01-06 17:18:46,286 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aacb373d943432dba4df6f122f81531', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:18:46,286 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aacb373d943432dba4df6f122f81531', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:18:46,286 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:18:46,286 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:18:46,286 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:18:46,287 - base_api.py:[280] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aacb373d943432dba4df6f122f81531', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:18:46,287 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9aacb373d943432dba4df6f122f81531', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:18:46,288 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 17:18:46,288 - base_api.py:[118] - [INFO] - dict_keys(['code', 'message'])
2022-01-06 17:18:46,288 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:18:46,288 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:18:46,288 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:18:46,289 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:18:46,302 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:18:46,302 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 17:18:46,311 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 17:18:46,323 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:46,323 - base_api.py:[89] - [INFO] - None
2022-01-06 17:18:46,410 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:18:46,410 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:18:46,410 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 17:18:46,410 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 17:18:46,410 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:18:46,410 - base_api.py:[280] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:18:46,410 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:18:46,411 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 17:18:46,411 - base_api.py:[118] - [INFO] - dict_keys(['code', 'message', 'result'])
2022-01-06 17:18:46,411 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 17:18:46,411 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 17:18:46,411 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 17:18:46,411 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 17:18:46,411 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 17:18:46,411 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 17:18:46,422 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:18:46,422 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 17:18:46,435 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 17:18:46,444 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:46,444 - base_api.py:[89] - [INFO] - None
2022-01-06 17:18:46,545 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ae638fd1e7464dd2904c320df9719f07', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:18:46,546 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ae638fd1e7464dd2904c320df9719f07', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:18:46,546 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:18:46,547 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:18:46,547 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 17:18:46,548 - base_api.py:[252] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:18:46,638 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:18:46,638 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 17:18:46,657 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 17:18:46,667 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:46,668 - base_api.py:[89] - [INFO] - None
2022-01-06 17:18:46,759 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0ef2a6426714496b8146ad169b6c8403', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:18:46,759 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0ef2a6426714496b8146ad169b6c8403', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:18:46,759 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:18:46,760 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:18:46,760 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 17:18:46,760 - base_api.py:[252] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid', 'isCertification']}
2022-01-06 17:18:46,859 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 17:18:49,302 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 17:18:56,989 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 17:18:57,544 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 17:18:57,558 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:18:57,558 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 17:18:57,564 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 17:18:57,574 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:57,574 - base_api.py:[89] - [INFO] - None
2022-01-06 17:18:57,869 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:7775f43e08ca4b0eaff4445c6a7bbe20', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:18:57,870 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:7775f43e08ca4b0eaff4445c6a7bbe20', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:18:57,871 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:18:57,871 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:18:57,872 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:18:57,872 - base_api.py:[280] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:7775f43e08ca4b0eaff4445c6a7bbe20', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:18:57,873 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:7775f43e08ca4b0eaff4445c6a7bbe20', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:18:57,877 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 17:18:57,878 - base_api.py:[118] - [INFO] - dict_keys(['code', 'message'])
2022-01-06 17:18:57,879 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:18:57,880 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:18:57,880 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:18:57,881 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:18:57,920 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:18:57,921 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 17:18:57,937 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 17:18:57,953 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:57,953 - base_api.py:[89] - [INFO] - None
2022-01-06 17:18:58,159 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:18:58,159 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:18:58,160 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 17:18:58,160 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 17:18:58,160 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:18:58,160 - base_api.py:[280] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:18:58,160 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:18:58,160 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 17:18:58,160 - base_api.py:[118] - [INFO] - dict_keys(['code', 'message', 'result'])
2022-01-06 17:18:58,161 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 17:18:58,161 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 17:18:58,161 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 17:18:58,161 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 17:18:58,161 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 17:18:58,161 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 17:18:58,176 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:18:58,176 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 17:18:58,193 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 17:18:58,203 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:58,203 - base_api.py:[89] - [INFO] - None
2022-01-06 17:18:58,443 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:18:58,443 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:18:58,444 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:18:58,444 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:18:58,444 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 17:18:58,444 - base_api.py:[252] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:18:58,444 - base_api.py:[260] - [INFO] - keys:['sessionid'],,kw:{'sessionid': 'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4'}
2022-01-06 17:18:58,454 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:18:58,458 - base_api.py:[83] - [INFO] - kwargs:{'sessionid': "'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4'"}api_datas:{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:18:58,459 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:18:58,459 - base_api.py:[89] - [INFO] - {'app-sessionid': 'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4'}
2022-01-06 17:18:58,698 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:18:58,698 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 17:18:58,698 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 17:18:58,698 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:18:58,698 - base_api.py:[280] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:1d4ef447b86446a8917d3f8f81e659c4', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 17:18:58,700 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:18:58,701 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 17:18:58,701 - base_api.py:[118] - [INFO] - dict_keys(['code', 'message', 'userId', 'buyerLevel', 'superior', 'inviter'])
2022-01-06 17:18:58,701 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:18:58,701 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:18:58,702 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:18:58,702 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:18:58,703 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 17:18:58,703 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 17:18:58,703 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 17:18:58,703 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 17:18:58,704 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 17:18:58,704 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 17:18:58,705 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 17:18:58,705 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 17:18:58,734 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:18:58,734 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 17:18:58,753 - base_api.py:[218] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2022-01-06 17:18:58,762 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:58,763 - base_api.py:[89] - [INFO] - None
2022-01-06 17:18:59,018 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:18:59,018 - base_api.py:[245] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:18:59,020 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:18:59,020 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:18:59,020 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2022-01-06 17:18:59,020 - base_api.py:[252] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid', 'isCertification']}
2022-01-06 17:18:59,020 - base_api.py:[260] - [INFO] - keys:['sessionid', 'isCertification'],,kw:{'sessionid': 'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8'}
2022-01-06 17:18:59,020 - base_api.py:[260] - [INFO] - keys:['sessionid', 'isCertification'],,kw:{'sessionid': 'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8', 'isCertification': 1}
2022-01-06 17:18:59,042 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid', 'isCertification'])
2022-01-06 17:18:59,042 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid', 'isCertification'])
2022-01-06 17:18:59,058 - base_api.py:[83] - [INFO] - kwargs:{'sessionid': "'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8'", 'isCertification': 1}api_datas:{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid', 'isCertification']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:59,059 - base_api.py:[88] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8'", 'isCertification': 1}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid', 'isCertification']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:18:59,082 - base_api.py:[89] - [INFO] - {'app-sessionid': 'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8'}
2022-01-06 17:18:59,408 - base_api.py:[94] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:14f532ea-16c8-4b55-98d5-2a32fa4ad304'}}}
2022-01-06 17:18:59,409 - base_api.py:[266] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2022-01-06 17:18:59,409 - base_api.py:[267] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2022-01-06 17:18:59,409 - base_api.py:[269] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:18:59,409 - base_api.py:[280] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f16031e33c44494fb8dde84785e4cce8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:14f532ea-16c8-4b55-98d5-2a32fa4ad304'}}}}
2022-01-06 17:18:59,409 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:14f532ea-16c8-4b55-98d5-2a32fa4ad304'}}}
2022-01-06 17:18:59,410 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2022-01-06 17:18:59,410 - base_api.py:[118] - [INFO] - dict_keys(['code', 'status', 'message'])
2022-01-06 17:18:59,411 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:18:59,411 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:18:59,411 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2022-01-06 17:18:59,411 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2022-01-06 17:18:59,411 - base_api.py:[124] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:18:59,412 - base_api.py:[127] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:18:59,456 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 17:19:01,889 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 17:42:46,234 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 17:42:46,795 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 17:42:46,807 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:42:46,807 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 17:42:46,813 - base_api.py:[221] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 17:42:46,822 - base_api.py:[89] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:42:46,822 - base_api.py:[90] - [INFO] - None
2022-01-06 17:42:46,984 - base_api.py:[95] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9183405849ea422b83b69ecd1d1ada61', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:42:46,985 - base_api.py:[248] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9183405849ea422b83b69ecd1d1ada61', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:42:46,985 - base_api.py:[268] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:42:46,985 - base_api.py:[269] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:42:46,985 - base_api.py:[271] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:42:46,985 - base_api.py:[282] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9183405849ea422b83b69ecd1d1ada61', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:42:46,985 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9183405849ea422b83b69ecd1d1ada61', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:42:46,986 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 17:42:46,986 - base_api.py:[121] - [INFO] - dict_keys(['code', 'message'])
2022-01-06 17:42:46,987 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:42:46,987 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:42:46,987 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:42:46,987 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:42:47,001 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:42:47,001 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 17:42:47,010 - base_api.py:[221] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 17:42:47,022 - base_api.py:[89] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:42:47,022 - base_api.py:[90] - [INFO] - None
2022-01-06 17:42:47,112 - base_api.py:[95] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:42:47,112 - base_api.py:[248] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:42:47,112 - base_api.py:[268] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 17:42:47,113 - base_api.py:[269] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 17:42:47,113 - base_api.py:[271] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:42:47,113 - base_api.py:[282] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:42:47,113 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:42:47,114 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 17:42:47,114 - base_api.py:[121] - [INFO] - dict_keys(['code', 'message', 'result'])
2022-01-06 17:42:47,114 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 17:42:47,115 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 17:42:47,115 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 17:42:47,115 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 17:42:47,115 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 17:42:47,115 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 17:42:47,125 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:42:47,125 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 17:42:47,137 - base_api.py:[221] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 17:42:47,146 - base_api.py:[89] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:42:47,146 - base_api.py:[90] - [INFO] - None
2022-01-06 17:42:47,255 - base_api.py:[95] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:42:47,256 - base_api.py:[248] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:42:47,256 - base_api.py:[268] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:42:47,256 - base_api.py:[269] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:42:47,256 - base_api.py:[271] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 17:42:47,257 - base_api.py:[255] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:42:47,277 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:42:47,277 - base_api.py:[79] - [INFO] - kwargs:{'sessionid': "'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76'"};;type:{'sessionid': "'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76'"}
2022-01-06 17:42:47,281 - base_api.py:[84] - [INFO] - kwargs:{'sessionid': "'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76'"}api_datas:{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:42:47,281 - base_api.py:[89] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:42:47,282 - base_api.py:[90] - [INFO] - {'app-sessionid': 'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76'}
2022-01-06 17:42:47,456 - base_api.py:[95] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:42:47,457 - base_api.py:[268] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 17:42:47,457 - base_api.py:[269] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 17:42:47,457 - base_api.py:[271] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:42:47,457 - base_api.py:[282] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c2039c133cd3459f866b9df396ab0e76', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 17:42:47,468 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:42:47,469 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 17:42:47,469 - base_api.py:[121] - [INFO] - dict_keys(['code', 'message', 'userId', 'buyerLevel', 'superior', 'inviter'])
2022-01-06 17:42:47,469 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:42:47,470 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:42:47,470 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:42:47,471 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:42:47,471 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 17:42:47,471 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 17:42:47,472 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 17:42:47,472 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 17:42:47,472 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 17:42:47,472 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 17:42:47,473 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 17:42:47,473 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 17:42:47,503 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:42:47,504 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 17:42:47,631 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 17:42:50,338 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2022-01-06 17:43:10,192 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2022-01-06 17:43:10,746 - get_case.py:[37] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2022-01-06 17:43:10,759 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:43:10,759 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login************
2022-01-06 17:43:10,765 - base_api.py:[221] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2022-01-06 17:43:10,775 - base_api.py:[89] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:43:10,775 - base_api.py:[90] - [INFO] - None
2022-01-06 17:43:10,886 - base_api.py:[95] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eabd656515df49a8b73860322c56b7bb', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:43:10,886 - base_api.py:[248] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eabd656515df49a8b73860322c56b7bb', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:43:10,886 - base_api.py:[268] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:43:10,886 - base_api.py:[269] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:43:10,886 - base_api.py:[271] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:43:10,886 - base_api.py:[282] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eabd656515df49a8b73860322c56b7bb', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:43:10,886 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:eabd656515df49a8b73860322c56b7bb', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:43:10,887 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2022-01-06 17:43:10,887 - base_api.py:[121] - [INFO] - dict_keys(['code', 'message'])
2022-01-06 17:43:10,888 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:43:10,888 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:43:10,888 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:43:10,888 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:43:10,898 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:43:10,898 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_login_wrong_pwd************
2022-01-06 17:43:10,904 - base_api.py:[221] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2022-01-06 17:43:10,913 - base_api.py:[89] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:43:10,913 - base_api.py:[90] - [INFO] - None
2022-01-06 17:43:10,999 - base_api.py:[95] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:43:10,999 - base_api.py:[248] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:43:10,999 - base_api.py:[268] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2022-01-06 17:43:10,999 - base_api.py:[269] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2022-01-06 17:43:11,000 - base_api.py:[271] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:43:11,000 - base_api.py:[282] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2022-01-06 17:43:11,000 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2022-01-06 17:43:11,000 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2022-01-06 17:43:11,000 - base_api.py:[121] - [INFO] - dict_keys(['code', 'message', 'result'])
2022-01-06 17:43:11,000 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2022-01-06 17:43:11,000 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2022-01-06 17:43:11,001 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2022-01-06 17:43:11,001 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2022-01-06 17:43:11,001 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2022-01-06 17:43:11,001 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2022-01-06 17:43:11,013 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:43:11,013 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\buyer_login.yaml，用例名称：test_getUser************
2022-01-06 17:43:11,030 - base_api.py:[221] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2022-01-06 17:43:11,042 - base_api.py:[89] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数(sessionid)::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2022-01-06 17:43:11,043 - base_api.py:[90] - [INFO] - None
2022-01-06 17:43:11,135 - base_api.py:[95] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2022-01-06 17:43:11,136 - base_api.py:[248] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2022-01-06 17:43:11,136 - base_api.py:[268] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2022-01-06 17:43:11,136 - base_api.py:[269] - [INFO] - 从top_res_dic获取到接口名api为test_login
2022-01-06 17:43:11,136 - base_api.py:[271] - [INFO] - 下游接口名far_api_name为test_getUser
2022-01-06 17:43:11,136 - base_api.py:[255] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2022-01-06 17:43:11,144 - base_api.py:[73] - [INFO] - 查看kwargs.keys()dict_keys(['sessionid'])
2022-01-06 17:43:11,144 - base_api.py:[79] - [INFO] - kwargs:{'sessionid': "'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac'"};;type:<class 'dict'>
2022-01-06 17:43:11,147 - base_api.py:[84] - [INFO] - kwargs:{'sessionid': "'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac'"}api_datas:{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:43:11,147 - base_api.py:[89] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数(sessionid)::{'sessionid': "'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2022-01-06 17:43:11,147 - base_api.py:[90] - [INFO] - {'app-sessionid': 'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac'}
2022-01-06 17:43:11,268 - base_api.py:[95] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:43:11,268 - base_api.py:[268] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2022-01-06 17:43:11,268 - base_api.py:[269] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2022-01-06 17:43:11,269 - base_api.py:[271] - [INFO] - 下游接口名far_api_name为None
2022-01-06 17:43:11,269 - base_api.py:[282] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c10a7f499971457d9ec01fd07e05b5ac', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2022-01-06 17:43:11,270 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2022-01-06 17:43:11,280 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2022-01-06 17:43:11,280 - base_api.py:[121] - [INFO] - dict_keys(['code', 'message', 'userId', 'buyerLevel', 'superior', 'inviter'])
2022-01-06 17:43:11,280 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2022-01-06 17:43:11,280 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2022-01-06 17:43:11,281 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2022-01-06 17:43:11,281 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2022-01-06 17:43:11,281 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2022-01-06 17:43:11,281 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2022-01-06 17:43:11,282 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2022-01-06 17:43:11,282 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2022-01-06 17:43:11,282 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2022-01-06 17:43:11,282 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2022-01-06 17:43:11,283 - base_api.py:[127] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2022-01-06 17:43:11,283 - base_api.py:[130] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2022-01-06 17:43:11,299 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口****************
2022-01-06 17:43:11,299 - test_temple.py:[18] - [INFO] - 用例yaml文件路径：.\yaml_test_api\order.yaml，用例名称：test_OrderQueue************
2022-01-06 17:43:11,416 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2022-01-06 17:43:13,900 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
