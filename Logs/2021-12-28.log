2021-12-28 09:58:05,518 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 09:58:05,550 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 09:58:05,691 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:96e39857d22e450fa2409667bb641453', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 09:58:05,692 - base_api.py:[233] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:96e39857d22e450fa2409667bb641453', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 09:58:05,693 - base_api.py:[239] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 09:58:05,754 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:96e39857d22e450fa2409667bb641453'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:96e39857d22e450fa2409667bb641453'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 09:58:05,885 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:6c864a58-fcb0-42a2-86ed-f63661b0e810'}}}
2021-12-28 09:58:05,887 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:6c864a58-fcb0-42a2-86ed-f63661b0e810'}}}
2021-12-28 09:58:05,891 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 09:58:05,892 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 09:58:05,893 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 09:58:05,894 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 09:58:05,895 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 09:58:05,896 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 09:58:05,897 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 09:58:05,927 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 09:58:05,972 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 09:58:06,072 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6f4408513fbc48f3b6392ab581e4a020', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 09:58:06,109 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 09:58:06,210 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:95dc02df407f4fc48900913c623e517d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 09:58:06,212 - base_api.py:[233] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:95dc02df407f4fc48900913c623e517d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 09:58:06,213 - base_api.py:[239] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 10:00:31,347 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 10:00:31,365 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 10:00:31,379 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:00:31,487 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:09468c23c8dd45b0b857398bfbd22c0f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:00:31,489 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:09468c23c8dd45b0b857398bfbd22c0f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 10:00:31,490 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 10:00:31,556 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:09468c23c8dd45b0b857398bfbd22c0f'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:09468c23c8dd45b0b857398bfbd22c0f'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:00:31,661 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:28e86289-bb05-49c5-b85c-9044eaa11167'}}}
2021-12-28 10:00:31,664 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:28e86289-bb05-49c5-b85c-9044eaa11167'}}}
2021-12-28 10:00:31,668 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 10:00:31,669 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 10:00:31,670 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 10:00:31,671 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 10:00:31,672 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 10:00:31,673 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 10:00:31,676 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 10:00:31,722 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 10:00:31,757 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 10:00:31,766 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:00:31,882 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:1df332b66c5d49cd92d86e6b03369691', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:00:31,920 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:00:32,086 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6f5580627fff427fa2691df8796fbb26', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:00:32,088 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6f5580627fff427fa2691df8796fbb26', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 10:00:32,089 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 10:30:58,190 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 10:30:58,221 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 10:30:58,231 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:30:58,345 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f0f6d378db6b427fa032491aa50ec277', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:30:58,347 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f0f6d378db6b427fa032491aa50ec277', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 10:30:58,348 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 10:30:58,409 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:f0f6d378db6b427fa032491aa50ec277'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:f0f6d378db6b427fa032491aa50ec277'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:30:58,522 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:08f866ea-7db1-49ba-99e7-ab097fd5440a'}}}
2021-12-28 10:30:58,525 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:08f866ea-7db1-49ba-99e7-ab097fd5440a'}}}
2021-12-28 10:30:58,527 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 10:30:58,528 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 10:30:58,529 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 10:30:58,531 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 10:30:58,537 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 10:30:58,538 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 10:30:58,539 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 10:30:58,595 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 10:30:58,635 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 10:30:58,645 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:30:58,749 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a01301da96ff4c4bbef671220b151a75', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:30:58,779 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:30:58,928 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:15a49b9e64e84a1c9509368b13d98853', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:30:58,930 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:15a49b9e64e84a1c9509368b13d98853', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 10:30:58,931 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 10:30:58,974 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:15a49b9e64e84a1c9509368b13d98853'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:15a49b9e64e84a1c9509368b13d98853'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:30:59,065 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:37b4a5de-24d6-4d1c-a415-8f14b13e5449'}}}
2021-12-28 10:30:59,067 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 10:30:59,069 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 10:46:34,421 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 10:46:34,439 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 10:46:34,449 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:46:34,580 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6aed27071d1b48efa2abc45f0fd93f22', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:46:34,581 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6aed27071d1b48efa2abc45f0fd93f22', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 10:46:34,582 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 10:46:34,645 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:6aed27071d1b48efa2abc45f0fd93f22'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:6aed27071d1b48efa2abc45f0fd93f22'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:46:34,748 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:0abf82e2-8598-4284-9ede-5da1ca6e36b1'}}}
2021-12-28 10:46:34,750 - base_api.py:[257] - [INFO] - 接口响应数据字典集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6aed27071d1b48efa2abc45f0fd93f22', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:0abf82e2-8598-4284-9ede-5da1ca6e36b1'}}}}
2021-12-28 10:46:34,751 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:0abf82e2-8598-4284-9ede-5da1ca6e36b1'}}}
2021-12-28 10:46:34,754 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 10:46:34,755 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 10:46:34,756 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 10:46:34,757 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 10:46:34,758 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 10:46:34,759 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 10:46:34,760 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 10:46:34,788 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 10:46:34,823 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 10:46:34,833 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:46:34,958 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d8b6ea4dd93141a7bd3906de00aa216b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:46:34,987 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:46:35,078 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8a0edbdfb84a42e1ae92885be67369ff', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 10:46:35,079 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8a0edbdfb84a42e1ae92885be67369ff', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 10:46:35,080 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 10:46:35,144 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:8a0edbdfb84a42e1ae92885be67369ff'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:8a0edbdfb84a42e1ae92885be67369ff'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 10:46:35,239 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d76478ef-bb59-4740-852d-cf41620f7c41'}}}
2021-12-28 10:46:35,240 - base_api.py:[257] - [INFO] - 接口响应数据字典集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8a0edbdfb84a42e1ae92885be67369ff', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d76478ef-bb59-4740-852d-cf41620f7c41'}}}}
2021-12-28 10:46:35,241 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 10:46:35,243 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 11:18:21,068 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 11:18:21,089 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 11:18:21,099 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:18:21,240 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:166b0a7c8c1b450598ad91a2dd9e7002', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:18:21,241 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:166b0a7c8c1b450598ad91a2dd9e7002', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 11:18:21,243 - base_api.py:[251] - [INFO] - 下游接口名api_name为test_OrderQueue
2021-12-28 11:18:21,243 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 11:18:21,297 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:166b0a7c8c1b450598ad91a2dd9e7002'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:166b0a7c8c1b450598ad91a2dd9e7002'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:18:21,398 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e74415c1-2002-4e0c-9d0b-b5bdf926a326'}}}
2021-12-28 11:18:21,399 - base_api.py:[257] - [INFO] - 接口响应数据字典集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:166b0a7c8c1b450598ad91a2dd9e7002', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e74415c1-2002-4e0c-9d0b-b5bdf926a326'}}}}
2021-12-28 11:18:21,400 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e74415c1-2002-4e0c-9d0b-b5bdf926a326'}}}
2021-12-28 11:18:21,403 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 11:18:21,404 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 11:18:21,405 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 11:18:21,406 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 11:18:21,407 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 11:18:21,408 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 11:18:21,409 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 11:18:21,460 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 11:18:21,497 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 11:18:21,505 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:18:21,662 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8556b49d99c44a80b46df4f5915e3194', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:18:21,696 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:18:21,805 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4feb903095684c409ebfd7e749d32457', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:18:21,806 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4feb903095684c409ebfd7e749d32457', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 11:18:21,808 - base_api.py:[251] - [INFO] - 下游接口名api_name为test_OrderQueue
2021-12-28 11:18:21,814 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 11:18:21,874 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:4feb903095684c409ebfd7e749d32457'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:4feb903095684c409ebfd7e749d32457'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:18:21,972 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:233aab15-acae-4621-adb8-7df5dc4cb864'}}}
2021-12-28 11:18:21,972 - base_api.py:[257] - [INFO] - 接口响应数据字典集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4feb903095684c409ebfd7e749d32457', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:233aab15-acae-4621-adb8-7df5dc4cb864'}}}}
2021-12-28 11:18:21,973 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 11:18:21,975 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 11:38:25,589 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 11:38:25,606 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 11:38:25,616 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:38:25,760 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c1597d59b2e7478d81cbf4a287581596', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:38:25,761 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c1597d59b2e7478d81cbf4a287581596', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 11:38:25,762 - base_api.py:[250] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 11:38:25,763 - base_api.py:[252] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 11:38:25,763 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 11:38:25,824 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:c1597d59b2e7478d81cbf4a287581596'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:c1597d59b2e7478d81cbf4a287581596'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:38:25,973 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9832cfbd-c0fe-47a2-80b8-a0cd963756fe'}}}
2021-12-28 11:38:25,974 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c1597d59b2e7478d81cbf4a287581596', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9832cfbd-c0fe-47a2-80b8-a0cd963756fe'}}}}
2021-12-28 11:38:25,976 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9832cfbd-c0fe-47a2-80b8-a0cd963756fe'}}}
2021-12-28 11:38:25,984 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 11:38:25,985 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 11:38:25,986 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 11:38:25,990 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 11:38:25,991 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 11:38:25,992 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 11:38:25,992 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 11:38:26,026 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 11:38:26,061 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 11:38:26,070 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:38:26,171 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:dfffb96668f4463d99ecea333d671344', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:38:26,205 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:38:26,304 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e3547b45c69d418eb7af0ba36d673887', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:38:26,305 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e3547b45c69d418eb7af0ba36d673887', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 11:38:26,306 - base_api.py:[250] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 11:38:26,308 - base_api.py:[252] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 11:38:26,308 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 11:38:26,366 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:e3547b45c69d418eb7af0ba36d673887'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:e3547b45c69d418eb7af0ba36d673887'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:38:26,466 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:585c583e-0842-43e9-bb2c-62831a1e48c0'}}}
2021-12-28 11:38:26,467 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e3547b45c69d418eb7af0ba36d673887', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:585c583e-0842-43e9-bb2c-62831a1e48c0'}}}}
2021-12-28 11:38:26,468 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 11:38:26,469 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 11:42:42,210 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 11:42:42,228 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 11:42:42,240 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:42:42,641 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:86fe6cf736eb4e27a0003f09240395b0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:42:42,642 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:86fe6cf736eb4e27a0003f09240395b0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 11:42:42,643 - base_api.py:[250] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 11:42:42,644 - base_api.py:[252] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 11:42:42,645 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 11:42:42,692 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:86fe6cf736eb4e27a0003f09240395b0'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:86fe6cf736eb4e27a0003f09240395b0'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:42:43,038 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:ca54f62c-29dc-4dd0-a53e-49ead35f0ef6'}}}
2021-12-28 11:42:43,039 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 11:42:43,040 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:ca54f62c-29dc-4dd0-a53e-49ead35f0ef6'}}}
2021-12-28 11:42:43,044 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 11:42:43,051 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 11:42:43,052 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 11:42:43,053 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 11:42:43,054 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 11:42:43,055 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 11:42:43,058 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 11:42:43,094 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 11:42:43,130 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 11:42:43,139 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:42:43,511 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e9a1140d688447cda2af2fd1daa3c75b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:42:43,539 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:42:43,868 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e1c42c713be34fb19044d174c61dca28', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:42:43,869 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e1c42c713be34fb19044d174c61dca28', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 11:42:43,870 - base_api.py:[250] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 11:42:43,871 - base_api.py:[252] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 11:42:43,871 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 11:42:43,920 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:e1c42c713be34fb19044d174c61dca28'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:e1c42c713be34fb19044d174c61dca28'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:42:44,019 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e95d203d-8545-472f-a5c9-c6a9dbfc8847'}}}
2021-12-28 11:42:44,019 - base_api.py:[258] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 11:42:44,020 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 11:42:44,020 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 11:44:24,645 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 11:44:24,664 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 11:44:24,674 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:44:24,782 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:7f7df97a8ae64e6c834b2b541fb5b59b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:44:24,783 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:7f7df97a8ae64e6c834b2b541fb5b59b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 11:44:24,784 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 11:44:24,785 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 11:44:24,786 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 11:44:24,787 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 11:44:24,838 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:7f7df97a8ae64e6c834b2b541fb5b59b'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:7f7df97a8ae64e6c834b2b541fb5b59b'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:44:24,934 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:4a2cf6ae-81d3-4def-b025-bd15f7018418'}}}
2021-12-28 11:44:24,935 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:4a2cf6ae-81d3-4def-b025-bd15f7018418'}}}
2021-12-28 11:44:24,938 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 11:44:24,940 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 11:44:24,941 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 11:44:24,942 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 11:44:24,943 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 11:44:24,944 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 11:44:24,945 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 11:44:24,982 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 11:44:25,026 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 11:44:25,036 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:44:25,144 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:3820454532284861a0cc081e89564d4e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:44:25,173 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:44:25,284 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6ddd7cd8a6744e23b9f0c26b7a78eae3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 11:44:25,286 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:6ddd7cd8a6744e23b9f0c26b7a78eae3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 11:44:25,287 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 11:44:25,288 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 11:44:25,289 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 11:44:25,290 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 11:44:25,356 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:6ddd7cd8a6744e23b9f0c26b7a78eae3'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:6ddd7cd8a6744e23b9f0c26b7a78eae3'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 11:44:25,456 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:0657b49c-558d-475a-a4b2-e046c8ac953c'}}}
2021-12-28 11:44:25,457 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 11:44:25,458 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 14:06:18,479 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 14:06:18,497 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 14:06:18,507 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:06:18,844 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5782c1ce498148fa892073696eac7372', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:06:18,845 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5782c1ce498148fa892073696eac7372', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 14:06:18,846 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 14:06:18,851 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 14:06:18,939 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 14:06:18,972 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 14:06:18,982 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:06:19,314 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:58f4bc56b5e744868950edac3bd39360', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:06:19,351 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:06:19,735 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c8d6c00fe5494b488d7a858b9dab0430', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:06:19,736 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c8d6c00fe5494b488d7a858b9dab0430', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 14:06:19,738 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 14:06:19,739 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 14:08:23,904 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 14:08:23,922 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 14:08:23,931 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:08:24,315 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:34af0c83a23a4b8d9ebd873503a3db16', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:08:24,316 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:34af0c83a23a4b8d9ebd873503a3db16', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 14:08:24,317 - base_api.py:[273] - [INFO] - 非顶层接口响应集next_top_res_dic为：{}
2021-12-28 14:08:24,318 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 14:08:24,324 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 14:08:24,422 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 14:08:24,475 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 14:08:24,492 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:08:24,595 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:61a3d578db434143b8323307c1c9098a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:08:24,630 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:08:24,735 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:830f79477b704b3886e33905882788f0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:08:24,736 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:830f79477b704b3886e33905882788f0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 14:08:24,737 - base_api.py:[273] - [INFO] - 非顶层接口响应集next_top_res_dic为：{}
2021-12-28 14:08:24,738 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 14:08:24,739 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 14:10:50,384 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 14:10:50,402 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 14:10:50,411 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:10:50,521 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cfc27e506a3249648fc9acaf38c5fe70', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:10:50,522 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cfc27e506a3249648fc9acaf38c5fe70', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 14:10:50,523 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 14:10:50,524 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 14:10:50,524 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 14:10:50,525 - base_api.py:[241] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 14:10:50,578 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:cfc27e506a3249648fc9acaf38c5fe70'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:cfc27e506a3249648fc9acaf38c5fe70'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:10:50,733 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d98d5036-3fd2-4c0f-aeec-35e6332318ad'}}}
2021-12-28 14:10:50,734 - base_api.py:[274] - [INFO] - 非顶层接口响应集next_top_res_dic为：{'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d98d5036-3fd2-4c0f-aeec-35e6332318ad'}}}}
2021-12-28 14:10:50,735 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d98d5036-3fd2-4c0f-aeec-35e6332318ad'}}}
2021-12-28 14:10:50,738 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 14:10:50,739 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 14:10:50,740 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 14:10:50,742 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 14:10:50,743 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 14:10:50,749 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 14:10:50,750 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 14:10:50,798 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 14:10:50,850 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 14:10:50,863 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:10:50,954 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c269c95c027343b2b0d32f147d040fe0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:10:50,982 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:10:51,075 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:323369fe814d44efb3743ac1a4a197a6', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:10:51,075 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:323369fe814d44efb3743ac1a4a197a6', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 14:10:51,076 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 14:10:51,076 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 14:10:51,076 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 14:10:51,076 - base_api.py:[241] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 14:10:51,102 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:323369fe814d44efb3743ac1a4a197a6'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:323369fe814d44efb3743ac1a4a197a6'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:10:51,207 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:c2e79dd3-35a9-4383-b55b-5a40e516c17b'}}}
2021-12-28 14:10:51,208 - base_api.py:[274] - [INFO] - 非顶层接口响应集next_top_res_dic为：{'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:c2e79dd3-35a9-4383-b55b-5a40e516c17b'}}}}
2021-12-28 14:10:51,208 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为None
2021-12-28 14:10:51,208 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 14:58:58,138 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 14:58:58,157 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 14:58:58,166 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:58:58,307 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a7b3afa4ffaa493ba507f79f7d2b55bc', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:58:58,308 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a7b3afa4ffaa493ba507f79f7d2b55bc', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 14:58:58,309 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 14:58:58,310 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 14:58:58,311 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 14:58:58,312 - base_api.py:[241] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 14:58:58,365 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:a7b3afa4ffaa493ba507f79f7d2b55bc'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:a7b3afa4ffaa493ba507f79f7d2b55bc'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:58:58,487 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:7b38a159-3b86-4bc6-a313-3b6c68ab5f9f'}}}
2021-12-28 14:58:58,488 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 14:58:58,489 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 14:58:58,489 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为None
2021-12-28 14:58:58,490 - base_api.py:[275] - [INFO] - 非顶层接口响应集next_top_res_dic为：{'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:7b38a159-3b86-4bc6-a313-3b6c68ab5f9f'}}}}
2021-12-28 14:58:58,492 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:7b38a159-3b86-4bc6-a313-3b6c68ab5f9f'}}}
2021-12-28 14:58:58,495 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 14:58:58,502 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 14:58:58,502 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 14:58:58,503 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 14:58:58,504 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 14:58:58,505 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 14:58:58,508 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 14:58:58,543 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 14:58:58,578 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 14:58:58,588 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:58:58,687 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a6b1f29c48744d87ac7e87b3097d317a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:58:58,718 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:58:58,813 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:218c24f2956646379a8432c38848fb20', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 14:58:58,814 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:218c24f2956646379a8432c38848fb20', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 14:58:58,815 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 14:58:58,816 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 14:58:58,816 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 14:58:58,817 - base_api.py:[241] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 14:58:58,865 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:218c24f2956646379a8432c38848fb20'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:218c24f2956646379a8432c38848fb20'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 14:58:58,971 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:0d30606b-4726-457a-9a1e-df1cdbc8045b'}}}
2021-12-28 14:58:58,972 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 14:58:58,973 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 14:58:58,974 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 14:58:58,974 - base_api.py:[241] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:14:47,380 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 15:14:47,397 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 15:14:47,408 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:14:47,537 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5c8c96d856b24a5fb6c570401720a7c5', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:14:47,538 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5c8c96d856b24a5fb6c570401720a7c5', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:14:47,539 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:14:47,540 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:14:47,541 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:14:47,541 - base_api.py:[241] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:14:47,603 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:5c8c96d856b24a5fb6c570401720a7c5'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:5c8c96d856b24a5fb6c570401720a7c5'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:14:47,706 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:725d5580-8d19-4d53-8e92-4371d8ad92cc'}}}
2021-12-28 15:14:47,707 - base_api.py:[249] - [INFO] - 非顶层接口响应集next_top_res_dic为：{'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:725d5580-8d19-4d53-8e92-4371d8ad92cc'}}}}
2021-12-28 15:14:47,708 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:14:47,709 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:14:47,710 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:14:47,711 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:725d5580-8d19-4d53-8e92-4371d8ad92cc'}}}
2021-12-28 15:14:47,714 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 15:14:47,715 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:14:47,716 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:14:47,717 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 15:14:47,718 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 15:14:47,719 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:14:47,720 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:14:47,748 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 15:14:47,783 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 15:14:47,792 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:14:47,911 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:5b717a8a2b4b48efb50edacb4ba564f0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:14:47,944 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:14:48,058 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:84a753b44d2143ae95d8935bb36dd851', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:14:48,059 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:84a753b44d2143ae95d8935bb36dd851', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:14:48,061 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:14:48,068 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:14:48,068 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:14:48,069 - base_api.py:[241] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:14:48,132 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:84a753b44d2143ae95d8935bb36dd851'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:84a753b44d2143ae95d8935bb36dd851'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:14:48,235 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:3037f910-49ea-488b-a2cb-fb2736029578'}}}
2021-12-28 15:14:48,236 - base_api.py:[249] - [INFO] - 非顶层接口响应集next_top_res_dic为：{'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:3037f910-49ea-488b-a2cb-fb2736029578'}}}}
2021-12-28 15:14:48,237 - base_api.py:[262] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:14:48,238 - base_api.py:[263] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:14:48,239 - base_api.py:[265] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 15:14:48,240 - base_api.py:[241] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:19:01,564 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 15:19:01,583 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 15:19:01,595 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:01,730 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2ebd8cf927ee4a18a8c5f0884fc24e68', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:19:01,731 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2ebd8cf927ee4a18a8c5f0884fc24e68', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:19:01,732 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:19:01,733 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:19:01,734 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:19:01,734 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:19:01,803 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:2ebd8cf927ee4a18a8c5f0884fc24e68'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:2ebd8cf927ee4a18a8c5f0884fc24e68'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:01,901 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:4f961108-92c5-4051-9f2a-bf90f9d54e21'}}}
2021-12-28 15:19:01,903 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:19:01,904 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:19:01,905 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:19:01,989 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 15:19:02,028 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 15:19:02,037 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:02,139 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:083577d797e943d08dff46b3433a70be', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:19:02,167 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:02,261 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4df7c4d0fa4041a38fed3021eca192ac', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:19:02,262 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4df7c4d0fa4041a38fed3021eca192ac', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:19:02,263 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:19:02,264 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:19:02,264 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:19:02,265 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:19:02,311 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:4df7c4d0fa4041a38fed3021eca192ac'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:4df7c4d0fa4041a38fed3021eca192ac'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:02,414 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:1890a2b2-bd4b-431a-ad7f-552a24a2b9d5'}}}
2021-12-28 15:19:02,415 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:19:02,416 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:19:02,417 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 15:19:02,418 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:19:02,457 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:4df7c4d0fa4041a38fed3021eca192ac'", 'queueNumber': "'liveQueue:1890a2b2-bd4b-431a-ad7f-552a24a2b9d5'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:4df7c4d0fa4041a38fed3021eca192ac'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:1890a2b2-bd4b-431a-ad7f-552a24a2b9d5'}, 'tag': None}
2021-12-28 15:19:02,536 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:19:02,537 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 15:19:02,538 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 15:19:02,539 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:19:19,859 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 15:19:19,878 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 15:19:19,888 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:20,002 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:04480a2c00a846149747877751a9fcdf', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:19:20,003 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:04480a2c00a846149747877751a9fcdf', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:19:20,004 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:19:20,005 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:19:20,006 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:19:20,006 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:19:20,062 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:04480a2c00a846149747877751a9fcdf'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:04480a2c00a846149747877751a9fcdf'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:20,160 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:3e39fb69-4edd-4fd5-9547-c1b2e16d5545'}}}
2021-12-28 15:19:20,161 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:19:20,162 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:19:20,164 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:19:20,165 - base_api.py:[275] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:04480a2c00a846149747877751a9fcdf', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:3e39fb69-4edd-4fd5-9547-c1b2e16d5545'}}}}
2021-12-28 15:19:20,166 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:3e39fb69-4edd-4fd5-9547-c1b2e16d5545'}}}
2021-12-28 15:19:20,169 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 15:19:20,171 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:19:20,171 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:19:20,173 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 15:19:20,179 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 15:19:20,180 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:19:20,181 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:19:20,234 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 15:19:20,272 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 15:19:20,282 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:20,379 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:74ac89b8253e49de8c1fe688ff5883de', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:19:20,408 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:20,509 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:421821b5a2a74765b2b4b58fd962a689', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:19:20,510 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:421821b5a2a74765b2b4b58fd962a689', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:19:20,511 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:19:20,512 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:19:20,512 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:19:20,513 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:19:20,569 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:421821b5a2a74765b2b4b58fd962a689'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:421821b5a2a74765b2b4b58fd962a689'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:19:20,666 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:a9ef3e14-57b5-4b5e-a6fb-44878ae05c88'}}}
2021-12-28 15:19:20,667 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:19:20,668 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:19:20,669 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 15:19:20,670 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:19:20,715 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:421821b5a2a74765b2b4b58fd962a689'", 'queueNumber': "'liveQueue:a9ef3e14-57b5-4b5e-a6fb-44878ae05c88'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:421821b5a2a74765b2b4b58fd962a689'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:a9ef3e14-57b5-4b5e-a6fb-44878ae05c88'}, 'tag': None}
2021-12-28 15:19:20,797 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:19:20,798 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 15:19:20,799 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 15:19:20,801 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:19:20,802 - base_api.py:[275] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:421821b5a2a74765b2b4b58fd962a689', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:a9ef3e14-57b5-4b5e-a6fb-44878ae05c88'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 15:19:20,804 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:19:20,811 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 15:19:20,812 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 15:19:20,813 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 15:19:20,816 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 15:19:20,817 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 15:19:20,818 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:19:20,819 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:21:40,884 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 15:21:40,903 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 15:21:40,913 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:21:41,074 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9605daa37c304e14880cee315ae0ae79', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:21:41,075 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9605daa37c304e14880cee315ae0ae79', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:21:41,076 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:21:41,077 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:21:41,078 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:21:41,078 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:21:41,128 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:9605daa37c304e14880cee315ae0ae79'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:9605daa37c304e14880cee315ae0ae79'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:21:41,230 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:0811a89b-fd4e-4972-a53b-034bb402b9f9'}}}
2021-12-28 15:21:41,231 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:21:41,232 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:21:41,233 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:21:41,233 - base_api.py:[275] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9605daa37c304e14880cee315ae0ae79', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:0811a89b-fd4e-4972-a53b-034bb402b9f9'}}}}
2021-12-28 15:21:41,234 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:0811a89b-fd4e-4972-a53b-034bb402b9f9'}}}
2021-12-28 15:21:41,237 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 15:21:41,238 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:21:41,239 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:21:41,241 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 15:21:41,242 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 15:21:41,244 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:21:41,250 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:21:41,294 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 15:21:41,330 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 15:21:41,339 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:21:41,471 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:367c80b33c9741739e0dde5a0ebc1b33', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:21:41,497 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:21:41,610 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d0c93c9f6ee8467ea665692fef43b75d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:21:41,611 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d0c93c9f6ee8467ea665692fef43b75d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:21:41,612 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:21:41,613 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:21:41,614 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:21:41,615 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:21:41,668 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:d0c93c9f6ee8467ea665692fef43b75d'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:d0c93c9f6ee8467ea665692fef43b75d'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:21:41,770 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:3804c643-e5c4-40f7-a412-25824d149266'}}}
2021-12-28 15:21:41,771 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:21:41,772 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:21:41,772 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 15:21:41,773 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:21:41,804 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:d0c93c9f6ee8467ea665692fef43b75d'", 'queueNumber': "'liveQueue:3804c643-e5c4-40f7-a412-25824d149266'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:d0c93c9f6ee8467ea665692fef43b75d'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:3804c643-e5c4-40f7-a412-25824d149266'}, 'tag': None}
2021-12-28 15:21:41,908 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:21:41,909 - base_api.py:[261] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 15:21:41,911 - base_api.py:[262] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 15:21:41,912 - base_api.py:[264] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:21:41,913 - base_api.py:[275] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d0c93c9f6ee8467ea665692fef43b75d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:3804c643-e5c4-40f7-a412-25824d149266'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 15:21:41,920 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:21:41,921 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 15:21:41,923 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 15:21:41,924 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 15:21:41,927 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 15:21:41,928 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 15:21:41,929 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:21:41,930 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:42:56,450 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_login************
2021-12-28 15:42:56,458 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 15:42:56,467 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:56,604 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e6e395e1bdf249dca78043a7ef284a27', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:42:56,606 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e6e395e1bdf249dca78043a7ef284a27', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:42:56,607 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:42:56,608 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:42:56,609 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:42:56,610 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e6e395e1bdf249dca78043a7ef284a27', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:42:56,611 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e6e395e1bdf249dca78043a7ef284a27', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:42:56,615 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 15:42:56,616 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:42:56,617 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:42:56,618 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:42:56,620 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:42:56,657 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 15:42:56,676 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 15:42:56,686 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:56,782 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 15:42:56,782 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 15:42:56,783 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 15:42:56,784 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 15:42:56,785 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:42:56,785 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 15:42:56,786 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 15:42:56,787 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 15:42:56,788 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 15:42:56,788 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 15:42:56,789 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 15:42:56,790 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 15:42:56,791 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:42:56,793 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:42:56,822 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_getUser************
2021-12-28 15:42:56,840 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 15:42:56,849 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:56,972 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8aeb69ab557a428eac91b1baf9ed9d26', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:42:56,973 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8aeb69ab557a428eac91b1baf9ed9d26', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:42:56,975 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:42:56,976 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:42:56,977 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 15:42:56,977 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:42:57,010 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:8aeb69ab557a428eac91b1baf9ed9d26'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:8aeb69ab557a428eac91b1baf9ed9d26'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 15:42:57,144 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 15:42:57,146 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 15:42:57,148 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 15:42:57,150 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:42:57,151 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8aeb69ab557a428eac91b1baf9ed9d26', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 15:42:57,153 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 15:42:57,154 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 15:42:57,157 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:42:57,158 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:42:57,160 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:42:57,161 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:42:57,163 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 15:42:57,167 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 15:42:57,169 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 15:42:57,171 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 15:42:57,174 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 15:42:57,186 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 15:42:57,189 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 15:42:57,190 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 15:42:57,206 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\goods.yaml，test_get_goods_detail************
2021-12-28 15:42:57,225 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 15:42:57,236 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:57,337 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:87ce327fefe145d0ba987fcd6a792098', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:42:57,338 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:87ce327fefe145d0ba987fcd6a792098', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:42:57,340 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:42:57,341 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:42:57,342 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 15:42:57,342 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:42:57,367 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:87ce327fefe145d0ba987fcd6a792098'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:87ce327fefe145d0ba987fcd6a792098'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 15:42:57,570 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 15:42:57,573 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 15:42:57,577 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 15:42:57,578 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:42:57,579 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:87ce327fefe145d0ba987fcd6a792098', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 15:42:57,583 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 15:42:57,586 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 15:42:57,593 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:42:57,606 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:42:57,612 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:42:57,613 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:42:57,621 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 15:42:57,622 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 15:42:57,649 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 15:42:57,668 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 15:42:57,678 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:57,777 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:b6e3e55ceff846ef8cdc42bbda37c61f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:42:57,778 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:b6e3e55ceff846ef8cdc42bbda37c61f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:42:57,779 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:42:57,780 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:42:57,781 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:42:57,782 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:42:57,835 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:b6e3e55ceff846ef8cdc42bbda37c61f'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:b6e3e55ceff846ef8cdc42bbda37c61f'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:57,951 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:cf49c7e5-4480-4155-8866-c5e47b107f1e'}}}
2021-12-28 15:42:57,952 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:42:57,953 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:42:57,954 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:42:57,955 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:b6e3e55ceff846ef8cdc42bbda37c61f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:cf49c7e5-4480-4155-8866-c5e47b107f1e'}}}}
2021-12-28 15:42:57,956 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:cf49c7e5-4480-4155-8866-c5e47b107f1e'}}}
2021-12-28 15:42:57,959 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 15:42:57,961 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:42:57,962 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:42:57,962 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 15:42:57,963 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 15:42:57,964 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:42:57,965 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:42:58,003 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 15:42:58,038 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 15:42:58,047 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:58,151 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:bad46ef65f014896909c75e274ed4902', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:42:58,177 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:58,276 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8aa11b05d8ae40f5b15a1916c32dd863', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:42:58,277 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8aa11b05d8ae40f5b15a1916c32dd863', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:42:58,278 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:42:58,279 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:42:58,280 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:42:58,281 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:42:58,337 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:8aa11b05d8ae40f5b15a1916c32dd863'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:8aa11b05d8ae40f5b15a1916c32dd863'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:42:58,437 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:51939941-f05f-4c86-bfc4-866a1b91f6b9'}}}
2021-12-28 15:42:58,438 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:42:58,439 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:42:58,440 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 15:42:58,440 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:42:58,495 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:8aa11b05d8ae40f5b15a1916c32dd863'", 'queueNumber': "'liveQueue:51939941-f05f-4c86-bfc4-866a1b91f6b9'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:8aa11b05d8ae40f5b15a1916c32dd863'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:51939941-f05f-4c86-bfc4-866a1b91f6b9'}, 'tag': None}
2021-12-28 15:42:58,577 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:42:58,578 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 15:42:58,579 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 15:42:58,579 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:42:58,580 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:8aa11b05d8ae40f5b15a1916c32dd863', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:51939941-f05f-4c86-bfc4-866a1b91f6b9'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 15:42:58,581 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:42:58,582 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 15:42:58,583 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 15:42:58,584 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 15:42:58,584 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 15:42:58,585 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 15:42:58,586 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:42:58,587 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:51:17,752 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python3 -m pytest ./test_case/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 15:51:18,024 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 15:51:24,652 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 15:51:27,000 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 15:53:04,482 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_login************
2021-12-28 15:53:04,489 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 15:53:04,498 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:04,632 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:64fac409791645cf8f52b5b32b6d0018', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:53:04,633 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:64fac409791645cf8f52b5b32b6d0018', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:53:04,634 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:53:04,635 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:53:04,636 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:53:04,637 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:64fac409791645cf8f52b5b32b6d0018', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:53:04,638 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:64fac409791645cf8f52b5b32b6d0018', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:53:04,642 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 15:53:04,643 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:53:04,644 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:53:04,645 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:53:04,646 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:53:04,667 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 15:53:04,681 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 15:53:04,700 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:04,798 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 15:53:04,799 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 15:53:04,800 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 15:53:04,801 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 15:53:04,802 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:53:04,803 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 15:53:04,804 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 15:53:04,805 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 15:53:04,806 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 15:53:04,807 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 15:53:04,808 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 15:53:04,809 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 15:53:04,810 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:53:04,812 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:53:04,838 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_getUser************
2021-12-28 15:53:04,854 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 15:53:04,863 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:04,965 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f64a3067fb544ae59f9c2e1f49f57b35', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:53:04,966 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f64a3067fb544ae59f9c2e1f49f57b35', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:53:04,967 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:53:04,968 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:53:04,969 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 15:53:04,970 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:53:05,011 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:f64a3067fb544ae59f9c2e1f49f57b35'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:f64a3067fb544ae59f9c2e1f49f57b35'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 15:53:05,282 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 15:53:05,284 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 15:53:05,287 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 15:53:05,293 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:53:05,295 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f64a3067fb544ae59f9c2e1f49f57b35', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 15:53:05,297 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 15:53:05,299 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 15:53:05,302 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:53:05,303 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:53:05,304 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:53:05,306 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:53:05,307 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 15:53:05,309 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 15:53:05,311 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 15:53:05,313 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 15:53:05,316 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 15:53:05,317 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 15:53:05,319 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 15:53:05,320 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 15:53:05,338 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\goods.yaml，test_get_goods_detail************
2021-12-28 15:53:05,360 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 15:53:05,378 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:05,565 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:88bc73e236b64e66bc10e25aa3e569fe', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:53:05,566 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:88bc73e236b64e66bc10e25aa3e569fe', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:53:05,567 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:53:05,568 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:53:05,569 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 15:53:05,570 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:53:05,590 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:88bc73e236b64e66bc10e25aa3e569fe'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:88bc73e236b64e66bc10e25aa3e569fe'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 15:53:05,796 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 15:53:05,799 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 15:53:05,801 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 15:53:05,802 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:53:05,803 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:88bc73e236b64e66bc10e25aa3e569fe', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 15:53:05,806 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 15:53:05,810 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 15:53:05,816 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:53:05,817 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:53:05,823 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:53:05,825 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:53:05,829 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 15:53:05,829 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 15:53:05,858 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 15:53:05,878 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 15:53:05,888 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:05,992 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:3cffa1cdcdf84186877273310c5dc756', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:53:05,993 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:3cffa1cdcdf84186877273310c5dc756', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:53:05,994 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:53:05,995 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:53:05,995 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:53:05,996 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:53:06,055 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:3cffa1cdcdf84186877273310c5dc756'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:3cffa1cdcdf84186877273310c5dc756'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:06,187 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e08af539-1278-448c-8822-bc33d5966f98'}}}
2021-12-28 15:53:06,188 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:53:06,189 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:53:06,190 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:53:06,191 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:3cffa1cdcdf84186877273310c5dc756', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e08af539-1278-448c-8822-bc33d5966f98'}}}}
2021-12-28 15:53:06,192 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:e08af539-1278-448c-8822-bc33d5966f98'}}}
2021-12-28 15:53:06,194 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 15:53:06,195 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:53:06,196 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:53:06,197 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 15:53:06,198 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 15:53:06,201 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:53:06,202 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:53:06,263 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 15:53:06,310 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 15:53:06,321 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:06,421 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:fcdfe2ac8f9b424db1ebcf155ce1ce11', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:53:06,456 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:06,564 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f335b9b2c4f840e891d56bb0e508f3ca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:53:06,565 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f335b9b2c4f840e891d56bb0e508f3ca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:53:06,567 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:53:06,567 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:53:06,568 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:53:06,569 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:53:06,627 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:f335b9b2c4f840e891d56bb0e508f3ca'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:f335b9b2c4f840e891d56bb0e508f3ca'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:53:06,731 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:986de065-e554-4767-91b0-0f5e17710353'}}}
2021-12-28 15:53:06,733 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:53:06,734 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:53:06,735 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 15:53:06,736 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:53:06,792 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:f335b9b2c4f840e891d56bb0e508f3ca'", 'queueNumber': "'liveQueue:986de065-e554-4767-91b0-0f5e17710353'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:f335b9b2c4f840e891d56bb0e508f3ca'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:986de065-e554-4767-91b0-0f5e17710353'}, 'tag': None}
2021-12-28 15:53:06,872 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:53:06,873 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 15:53:06,874 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 15:53:06,876 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:53:06,881 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:f335b9b2c4f840e891d56bb0e508f3ca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:986de065-e554-4767-91b0-0f5e17710353'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 15:53:06,881 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:53:06,882 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 15:53:06,883 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 15:53:06,883 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 15:53:06,884 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 15:53:06,885 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 15:53:06,885 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:53:06,886 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:54:42,167 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python3 -m pytest -vs ./test_case/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 15:54:42,412 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 15:54:45,042 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 15:54:47,312 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 15:55:10,572 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python3 -m pytest -vs ./test_case/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 15:55:10,831 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 15:55:14,070 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 15:55:16,750 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 15:56:18,428 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：pytest -vs ./test_case/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 15:56:19,065 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_login************
2021-12-28 15:56:19,072 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 15:56:19,081 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:19,217 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9b8adc65660242a2b35e6e4583478ad3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:56:19,217 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9b8adc65660242a2b35e6e4583478ad3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:56:19,218 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:56:19,218 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:56:19,219 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:56:19,219 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9b8adc65660242a2b35e6e4583478ad3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:56:19,220 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:9b8adc65660242a2b35e6e4583478ad3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:56:19,223 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 15:56:19,224 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:56:19,224 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:56:19,225 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:56:19,225 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:56:19,252 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 15:56:19,266 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 15:56:19,282 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:19,395 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 15:56:19,395 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 15:56:19,396 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 15:56:19,396 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 15:56:19,396 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:56:19,396 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 15:56:19,396 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 15:56:19,396 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 15:56:19,396 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 15:56:19,397 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 15:56:19,397 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 15:56:19,397 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 15:56:19,397 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:56:19,397 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:56:19,411 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_getUser************
2021-12-28 15:56:19,431 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 15:56:19,440 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:19,554 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:75b1be0708bf4af1856500b36a116ff2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:56:19,554 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:75b1be0708bf4af1856500b36a116ff2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:56:19,555 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:56:19,555 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:56:19,556 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 15:56:19,556 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:56:19,593 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:75b1be0708bf4af1856500b36a116ff2'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:75b1be0708bf4af1856500b36a116ff2'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 15:56:19,712 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 15:56:19,713 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 15:56:19,713 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 15:56:19,713 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:56:19,713 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:75b1be0708bf4af1856500b36a116ff2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 15:56:19,722 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 15:56:19,722 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 15:56:19,723 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:56:19,723 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:56:19,723 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:56:19,723 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:56:19,724 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 15:56:19,724 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 15:56:19,724 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 15:56:19,724 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 15:56:19,725 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 15:56:19,725 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 15:56:19,725 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 15:56:19,726 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 15:56:19,732 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\goods.yaml，test_get_goods_detail************
2021-12-28 15:56:19,761 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 15:56:19,780 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:19,916 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:81ca7b012c014aa6a37af608a48a47ef', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:56:19,917 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:81ca7b012c014aa6a37af608a48a47ef', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:56:19,918 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:56:19,918 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:56:19,919 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 15:56:19,919 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:56:19,950 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:81ca7b012c014aa6a37af608a48a47ef'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:81ca7b012c014aa6a37af608a48a47ef'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 15:56:20,161 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 15:56:20,174 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 15:56:20,174 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 15:56:20,175 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:56:20,176 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:81ca7b012c014aa6a37af608a48a47ef', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 15:56:20,189 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 15:56:20,205 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 15:56:20,211 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:56:20,212 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:56:20,217 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:56:20,218 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:56:20,224 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 15:56:20,225 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 15:56:20,260 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 15:56:20,279 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 15:56:20,288 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:20,433 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4724f3024e244f35a0e49d5913528f44', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:56:20,434 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4724f3024e244f35a0e49d5913528f44', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:56:20,434 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:56:20,434 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:56:20,434 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:56:20,435 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:56:20,477 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:4724f3024e244f35a0e49d5913528f44'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:4724f3024e244f35a0e49d5913528f44'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:20,580 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:2a4269d5-0258-426e-b50a-7de4bf38aada'}}}
2021-12-28 15:56:20,581 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:56:20,581 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:56:20,582 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:56:20,582 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4724f3024e244f35a0e49d5913528f44', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:2a4269d5-0258-426e-b50a-7de4bf38aada'}}}}
2021-12-28 15:56:20,583 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:2a4269d5-0258-426e-b50a-7de4bf38aada'}}}
2021-12-28 15:56:20,585 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 15:56:20,586 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:56:20,586 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:56:20,587 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 15:56:20,588 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 15:56:20,588 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:56:20,589 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:56:20,627 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 15:56:20,663 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 15:56:20,672 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:20,775 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:61aaf7f5f7a94e1cb3a4657724b7a2e3', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:56:20,796 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:20,905 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ebff1f9907c34da6ae55f11eec319a7f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:56:20,906 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ebff1f9907c34da6ae55f11eec319a7f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:56:20,906 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:56:20,907 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:56:20,907 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:56:20,907 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:56:20,965 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:ebff1f9907c34da6ae55f11eec319a7f'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:ebff1f9907c34da6ae55f11eec319a7f'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:56:21,073 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d04b0ca9-acda-4d7b-b0d1-0d3793b96077'}}}
2021-12-28 15:56:21,074 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:56:21,075 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:56:21,075 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 15:56:21,076 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:56:21,127 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:ebff1f9907c34da6ae55f11eec319a7f'", 'queueNumber': "'liveQueue:d04b0ca9-acda-4d7b-b0d1-0d3793b96077'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:ebff1f9907c34da6ae55f11eec319a7f'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:d04b0ca9-acda-4d7b-b0d1-0d3793b96077'}, 'tag': None}
2021-12-28 15:56:21,245 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:56:21,246 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 15:56:21,246 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 15:56:21,247 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:56:21,247 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ebff1f9907c34da6ae55f11eec319a7f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:d04b0ca9-acda-4d7b-b0d1-0d3793b96077'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 15:56:21,248 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:56:21,249 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 15:56:21,250 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 15:56:21,250 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 15:56:21,251 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 15:56:21,251 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 15:56:21,252 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:56:21,252 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:56:21,333 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 15:56:24,300 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 15:56:26,507 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 15:58:08,115 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 15:58:08,767 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_login************
2021-12-28 15:58:08,773 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 15:58:08,781 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:08,909 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:abf446444d4141f084b062ca9ec2e726', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:58:08,909 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:abf446444d4141f084b062ca9ec2e726', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:58:08,910 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:58:08,910 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:58:08,910 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:58:08,910 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:abf446444d4141f084b062ca9ec2e726', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:58:08,911 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:abf446444d4141f084b062ca9ec2e726', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:58:08,911 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 15:58:08,912 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:58:08,912 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:58:08,912 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:58:08,913 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:58:08,946 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 15:58:08,952 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 15:58:08,961 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:09,054 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 15:58:09,055 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 15:58:09,056 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 15:58:09,056 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 15:58:09,056 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:58:09,057 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 15:58:09,057 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 15:58:09,058 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 15:58:09,059 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 15:58:09,059 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 15:58:09,060 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 15:58:09,060 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 15:58:09,061 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:58:09,061 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:58:09,104 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\buyer_login.yaml，test_getUser************
2021-12-28 15:58:09,117 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 15:58:09,126 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:09,225 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4d614c6091ca4ceebe4b22c9df49b6c9', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:58:09,226 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4d614c6091ca4ceebe4b22c9df49b6c9', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:58:09,226 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:58:09,227 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:58:09,227 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 15:58:09,228 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:58:09,254 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:4d614c6091ca4ceebe4b22c9df49b6c9'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:4d614c6091ca4ceebe4b22c9df49b6c9'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 15:58:09,417 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 15:58:09,418 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 15:58:09,418 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 15:58:09,418 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:58:09,419 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4d614c6091ca4ceebe4b22c9df49b6c9', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 15:58:09,431 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 15:58:09,432 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 15:58:09,433 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:58:09,433 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:58:09,434 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:58:09,435 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:58:09,436 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 15:58:09,436 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 15:58:09,437 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 15:58:09,437 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 15:58:09,438 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 15:58:09,438 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 15:58:09,439 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 15:58:09,439 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 15:58:09,452 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\goods.yaml，test_get_goods_detail************
2021-12-28 15:58:09,469 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 15:58:09,478 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:09,666 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e60eb13df7984971be52fa3456f55a02', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:58:09,666 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e60eb13df7984971be52fa3456f55a02', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:58:09,667 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:58:09,667 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:58:09,668 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 15:58:09,668 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:58:09,694 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:e60eb13df7984971be52fa3456f55a02'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:e60eb13df7984971be52fa3456f55a02'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 15:58:09,916 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 15:58:09,930 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 15:58:09,930 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 15:58:09,931 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:58:09,931 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e60eb13df7984971be52fa3456f55a02', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 15:58:09,946 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 15:58:09,962 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 15:58:09,966 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:58:09,966 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:58:09,969 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:58:09,970 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:58:09,973 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 15:58:09,973 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 15:58:10,001 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_OrderQueue************
2021-12-28 15:58:10,018 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 15:58:10,027 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:10,200 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:16c3a3424a3d4d4ea05a5371ea4eafd2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:58:10,200 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:16c3a3424a3d4d4ea05a5371ea4eafd2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:58:10,200 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:58:10,201 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:58:10,201 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:58:10,201 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:58:10,227 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:16c3a3424a3d4d4ea05a5371ea4eafd2'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:16c3a3424a3d4d4ea05a5371ea4eafd2'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:10,327 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:77bf71d0-26d9-49a4-979f-383de1582a9d'}}}
2021-12-28 15:58:10,327 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:58:10,328 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:58:10,328 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:58:10,329 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:16c3a3424a3d4d4ea05a5371ea4eafd2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:77bf71d0-26d9-49a4-979f-383de1582a9d'}}}}
2021-12-28 15:58:10,329 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:77bf71d0-26d9-49a4-979f-383de1582a9d'}}}
2021-12-28 15:58:10,331 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 15:58:10,332 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 15:58:10,332 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 15:58:10,333 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 15:58:10,333 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 15:58:10,334 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 15:58:10,334 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 15:58:10,367 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_api\order.yaml，test_selOrderQueue************
2021-12-28 15:58:10,401 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 15:58:10,409 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:10,601 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e9e77853dc6640f9ab7800f2db65e3a8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:58:10,628 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:10,801 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a0fe5f33f6764a7b809d13acfcdf9a05', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 15:58:10,802 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a0fe5f33f6764a7b809d13acfcdf9a05', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 15:58:10,802 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 15:58:10,803 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 15:58:10,803 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 15:58:10,804 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 15:58:10,857 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:a0fe5f33f6764a7b809d13acfcdf9a05'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:a0fe5f33f6764a7b809d13acfcdf9a05'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 15:58:10,984 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:6c7db64b-c537-4582-ab9d-dcce6d82ed27'}}}
2021-12-28 15:58:10,985 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 15:58:10,985 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 15:58:10,985 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 15:58:10,985 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 15:58:11,007 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:a0fe5f33f6764a7b809d13acfcdf9a05'", 'queueNumber': "'liveQueue:6c7db64b-c537-4582-ab9d-dcce6d82ed27'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:a0fe5f33f6764a7b809d13acfcdf9a05'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:6c7db64b-c537-4582-ab9d-dcce6d82ed27'}, 'tag': None}
2021-12-28 15:58:11,105 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:58:11,105 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 15:58:11,106 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 15:58:11,106 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 15:58:11,106 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:a0fe5f33f6764a7b809d13acfcdf9a05', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:6c7db64b-c537-4582-ab9d-dcce6d82ed27'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 15:58:11,106 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 15:58:11,107 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 15:58:11,107 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 15:58:11,107 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 15:58:11,108 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 15:58:11,108 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 15:58:11,108 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 15:58:11,108 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 15:58:11,160 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 15:58:14,253 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 15:58:16,174 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 16:00:53,079 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:00:53,878 - get_case.py:[33] - [ERROR] - 读取YAML文件:.\yaml_api\buyer_login.yaml把测试用例加入执行列表出错:[Errno 2] No such file or directory: '.\\yaml_api\\buyer_login.yaml'::错误详情:Traceback (most recent call last):
  File "D:\Buyer_test_code\apitest_jcmall\py_page\get_case.py", line 12, in get_yaml_case
    with open(yaml_path, "r", encoding="UTF-8") as f:
FileNotFoundError: [Errno 2] No such file or directory: '.\\yaml_api\\buyer_login.yaml'

2021-12-28 16:00:54,065 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:00:56,634 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:00:58,653 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 16:02:21,922 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:02:22,530 - get_case.py:[33] - [ERROR] - 读取YAML文件:.\yaml_api\buyer_login.yaml把测试用例加入执行列表出错:[Errno 2] No such file or directory: '.\\yaml_api\\buyer_login.yaml'::错误详情:Traceback (most recent call last):
  File "D:\Buyer_test_code\apitest_jcmall\py_page\get_case.py", line 12, in get_yaml_case
    with open(yaml_path, "r", encoding="UTF-8") as f:
FileNotFoundError: [Errno 2] No such file or directory: '.\\yaml_api\\buyer_login.yaml'

2021-12-28 16:02:22,658 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:02:25,284 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:02:27,043 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 16:06:19,092 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:06:19,927 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login************
2021-12-28 16:06:19,934 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 16:06:19,943 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:20,083 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d6f2c1ea4a8e4b8da4acd5462499b3af', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:06:20,084 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d6f2c1ea4a8e4b8da4acd5462499b3af', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:06:20,084 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:06:20,085 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:06:20,085 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:06:20,086 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d6f2c1ea4a8e4b8da4acd5462499b3af', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:06:20,086 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:d6f2c1ea4a8e4b8da4acd5462499b3af', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:06:20,090 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 16:06:20,090 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:06:20,091 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:06:20,091 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:06:20,092 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:06:20,115 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 16:06:20,122 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 16:06:20,130 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:20,228 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:06:20,228 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:06:20,229 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 16:06:20,229 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 16:06:20,229 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:06:20,230 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:06:20,231 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:06:20,232 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 16:06:20,232 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 16:06:20,233 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 16:06:20,233 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 16:06:20,234 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 16:06:20,234 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:06:20,235 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:06:20,270 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_getUser************
2021-12-28 16:06:20,291 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 16:06:20,300 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:20,395 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:da16d986aedf4c359b17f164952663b2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:06:20,396 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:da16d986aedf4c359b17f164952663b2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:06:20,396 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:06:20,397 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:06:20,397 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 16:06:20,398 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:06:20,439 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:da16d986aedf4c359b17f164952663b2'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:da16d986aedf4c359b17f164952663b2'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 16:06:20,575 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:06:20,576 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 16:06:20,577 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 16:06:20,578 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:06:20,578 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:da16d986aedf4c359b17f164952663b2', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 16:06:20,588 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:06:20,590 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 16:06:20,592 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:06:20,592 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:06:20,594 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:06:20,595 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:06:20,597 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 16:06:20,597 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 16:06:20,599 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 16:06:20,600 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 16:06:20,601 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 16:06:20,602 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 16:06:20,604 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 16:06:20,605 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 16:06:20,627 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\goods.yaml，test_get_goods_detail************
2021-12-28 16:06:20,648 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 16:06:20,660 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:20,796 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:248d31c67faa4d10a5ad1dcac535a779', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:06:20,796 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:248d31c67faa4d10a5ad1dcac535a779', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:06:20,797 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:06:20,797 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:06:20,797 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 16:06:20,798 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:06:20,823 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:248d31c67faa4d10a5ad1dcac535a779'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:248d31c67faa4d10a5ad1dcac535a779'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 16:06:21,071 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:06:21,074 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 16:06:21,075 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 16:06:21,076 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:06:21,077 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:248d31c67faa4d10a5ad1dcac535a779', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 16:06:21,091 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:06:21,106 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 16:06:21,113 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:06:21,113 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:06:21,119 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:06:21,120 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:06:21,126 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:06:21,126 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:06:21,159 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_OrderQueue************
2021-12-28 16:06:21,178 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 16:06:21,186 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:21,292 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ef94c5636ba74bef82d8c8885c6df2ad', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:06:21,293 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ef94c5636ba74bef82d8c8885c6df2ad', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:06:21,294 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:06:21,294 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:06:21,295 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:06:21,295 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:06:21,356 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:ef94c5636ba74bef82d8c8885c6df2ad'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:ef94c5636ba74bef82d8c8885c6df2ad'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:21,458 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:51adea7a-87a6-497a-ab6d-2b5306ff3cfe'}}}
2021-12-28 16:06:21,459 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:06:21,459 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:06:21,460 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:06:21,460 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ef94c5636ba74bef82d8c8885c6df2ad', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:51adea7a-87a6-497a-ab6d-2b5306ff3cfe'}}}}
2021-12-28 16:06:21,461 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:51adea7a-87a6-497a-ab6d-2b5306ff3cfe'}}}
2021-12-28 16:06:21,463 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 16:06:21,464 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:06:21,465 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:06:21,465 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 16:06:21,466 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 16:06:21,466 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:06:21,467 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:06:21,499 - test_temple.py:[19] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_selOrderQueue************
2021-12-28 16:06:21,533 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 16:06:21,541 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:21,640 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:1d89224dd91748a2b84a9a492b828b17', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:06:21,660 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:21,764 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:33c8596a377f4e56ab70ff46f18a32a8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:06:21,765 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:33c8596a377f4e56ab70ff46f18a32a8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:06:21,766 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:06:21,766 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:06:21,767 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:06:21,767 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:06:21,838 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:33c8596a377f4e56ab70ff46f18a32a8'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:33c8596a377f4e56ab70ff46f18a32a8'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:06:21,936 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:52e6686e-c674-458e-b23e-a159c4bed88d'}}}
2021-12-28 16:06:21,937 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:06:21,937 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:06:21,938 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 16:06:21,939 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 16:06:21,980 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:33c8596a377f4e56ab70ff46f18a32a8'", 'queueNumber': "'liveQueue:52e6686e-c674-458e-b23e-a159c4bed88d'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_test_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:33c8596a377f4e56ab70ff46f18a32a8'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:52e6686e-c674-458e-b23e-a159c4bed88d'}, 'tag': None}
2021-12-28 16:06:22,059 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:06:22,060 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 16:06:22,060 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 16:06:22,061 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:06:22,061 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:33c8596a377f4e56ab70ff46f18a32a8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:52e6686e-c674-458e-b23e-a159c4bed88d'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 16:06:22,062 - test_temple.py:[23] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:06:22,063 - test_temple.py:[25] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 16:06:22,064 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 16:06:22,065 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 16:06:22,066 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 16:06:22,066 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 16:06:22,067 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:06:22,067 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:06:22,134 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:06:25,147 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:06:27,484 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 16:29:42,530 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:29:43,705 - test_temple.py:[18] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login************
2021-12-28 16:29:43,719 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 16:29:43,731 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:43,851 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40e5504cf68f4cd990c8797ee6a7634e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:29:43,851 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40e5504cf68f4cd990c8797ee6a7634e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:29:43,852 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:29:43,852 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:29:43,852 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:29:43,853 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40e5504cf68f4cd990c8797ee6a7634e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:29:43,853 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40e5504cf68f4cd990c8797ee6a7634e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:29:43,855 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 16:29:43,855 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:29:43,855 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:29:43,856 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:29:43,856 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:29:43,879 - test_temple.py:[18] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 16:29:43,893 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 16:29:43,908 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:44,013 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:29:44,013 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:29:44,014 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 16:29:44,014 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 16:29:44,015 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:29:44,015 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:29:44,016 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:29:44,017 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 16:29:44,018 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 16:29:44,018 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 16:29:44,019 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 16:29:44,019 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 16:29:44,020 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:29:44,021 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:29:44,055 - test_temple.py:[18] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_getUser************
2021-12-28 16:29:44,078 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 16:29:44,089 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:44,180 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ce3ad3c617ec41e3923f8f99e03591ff', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:29:44,181 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ce3ad3c617ec41e3923f8f99e03591ff', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:29:44,181 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:29:44,181 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:29:44,182 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 16:29:44,182 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:29:44,201 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:ce3ad3c617ec41e3923f8f99e03591ff'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:ce3ad3c617ec41e3923f8f99e03591ff'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 16:29:44,314 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:29:44,314 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 16:29:44,314 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 16:29:44,314 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:29:44,315 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:ce3ad3c617ec41e3923f8f99e03591ff', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 16:29:44,317 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:29:44,317 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 16:29:44,318 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:29:44,318 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:29:44,319 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:29:44,319 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:29:44,319 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 16:29:44,319 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 16:29:44,320 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 16:29:44,320 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 16:29:44,320 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 16:29:44,320 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 16:29:44,321 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 16:29:44,321 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 16:29:44,328 - test_temple.py:[18] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\goods.yaml，test_get_goods_detail************
2021-12-28 16:29:44,346 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 16:29:44,356 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:44,461 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c3de594a587c4f60824f158bcc9e8f49', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:29:44,462 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c3de594a587c4f60824f158bcc9e8f49', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:29:44,462 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:29:44,462 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:29:44,463 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 16:29:44,463 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:29:44,486 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:c3de594a587c4f60824f158bcc9e8f49'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:c3de594a587c4f60824f158bcc9e8f49'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 16:29:44,681 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:29:44,691 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 16:29:44,692 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 16:29:44,692 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:29:44,693 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c3de594a587c4f60824f158bcc9e8f49', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 16:29:44,707 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:29:44,723 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 16:29:44,727 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:29:44,728 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:29:44,732 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:29:44,732 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:29:44,736 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:29:44,737 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:29:44,764 - test_temple.py:[18] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_OrderQueue************
2021-12-28 16:29:44,787 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 16:29:44,795 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:44,888 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40cb32bbd84d4ae9be213fdc679b585f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:29:44,888 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40cb32bbd84d4ae9be213fdc679b585f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:29:44,888 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:29:44,889 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:29:44,889 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:29:44,889 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:29:44,924 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:40cb32bbd84d4ae9be213fdc679b585f'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:40cb32bbd84d4ae9be213fdc679b585f'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:45,051 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9afb27e0-65d1-4320-af01-0b8fbd98538e'}}}
2021-12-28 16:29:45,051 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:29:45,052 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:29:45,052 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:29:45,052 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:40cb32bbd84d4ae9be213fdc679b585f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9afb27e0-65d1-4320-af01-0b8fbd98538e'}}}}
2021-12-28 16:29:45,053 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9afb27e0-65d1-4320-af01-0b8fbd98538e'}}}
2021-12-28 16:29:45,054 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 16:29:45,054 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:29:45,055 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:29:45,055 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 16:29:45,055 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 16:29:45,056 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:29:45,056 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:29:45,100 - test_temple.py:[18] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_selOrderQueue************
2021-12-28 16:29:45,135 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 16:29:45,144 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:45,241 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4b80926b4d3a42a6a84143b9d3823702', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:29:45,275 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:45,369 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:89b326d2647d415cae1814de23d0b22c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:29:45,370 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:89b326d2647d415cae1814de23d0b22c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:29:45,370 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:29:45,371 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:29:45,371 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:29:45,372 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:29:45,420 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:89b326d2647d415cae1814de23d0b22c'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:89b326d2647d415cae1814de23d0b22c'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:29:45,516 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:2130448f-e1c4-4add-bfe7-53230592100a'}}}
2021-12-28 16:29:45,516 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:29:45,517 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:29:45,517 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 16:29:45,518 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 16:29:45,574 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:89b326d2647d415cae1814de23d0b22c'", 'queueNumber': "'liveQueue:2130448f-e1c4-4add-bfe7-53230592100a'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_test_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:89b326d2647d415cae1814de23d0b22c'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:2130448f-e1c4-4add-bfe7-53230592100a'}, 'tag': None}
2021-12-28 16:29:45,656 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:29:45,657 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 16:29:45,658 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 16:29:45,658 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:29:45,659 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:89b326d2647d415cae1814de23d0b22c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:2130448f-e1c4-4add-bfe7-53230592100a'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 16:29:45,659 - test_temple.py:[22] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:29:45,660 - test_temple.py:[24] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 16:29:45,661 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 16:29:45,662 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 16:29:45,662 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 16:29:45,663 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 16:29:45,664 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:29:45,665 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:29:45,758 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:29:48,835 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:29:48,836 - run.py:[45] - [ERROR] - 读取配置文件::common/config.yaml并发送邮件::失败::[Errno 2] No such file or directory: 'common/config.yaml'::失败详情:Traceback (most recent call last):
  File "D:/Buyer_test_code/apitest_jcmall/run.py", line 36, in run_testCase
    with open (file_name,"r",encoding="UTF-8") as f:
FileNotFoundError: [Errno 2] No such file or directory: 'common/config.yaml'

2021-12-28 16:46:19,977 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:46:20,832 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login************
2021-12-28 16:46:20,838 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 16:46:20,847 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:21,000 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:47521f2dc249440bbc6769f72fe7e31c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:46:21,000 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:47521f2dc249440bbc6769f72fe7e31c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:46:21,000 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:46:21,001 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:46:21,001 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:46:21,003 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:47521f2dc249440bbc6769f72fe7e31c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:46:21,003 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:47521f2dc249440bbc6769f72fe7e31c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:46:21,006 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 16:46:21,007 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:46:21,008 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:46:21,008 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:46:21,009 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:46:21,047 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 16:46:21,061 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 16:46:21,084 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:21,180 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:46:21,181 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:46:21,181 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 16:46:21,182 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 16:46:21,182 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:46:21,183 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:46:21,183 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:46:21,184 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 16:46:21,185 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 16:46:21,185 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 16:46:21,186 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 16:46:21,186 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 16:46:21,187 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:46:21,187 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:46:21,220 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_getUser************
2021-12-28 16:46:21,238 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 16:46:21,262 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:21,365 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0e97c5d1f91048b29a14ee7dba6dcaf8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:46:21,365 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0e97c5d1f91048b29a14ee7dba6dcaf8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:46:21,365 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:46:21,366 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:46:21,366 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 16:46:21,366 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:46:21,395 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:0e97c5d1f91048b29a14ee7dba6dcaf8'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:0e97c5d1f91048b29a14ee7dba6dcaf8'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 16:46:21,571 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:46:21,572 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 16:46:21,573 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 16:46:21,573 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:46:21,574 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0e97c5d1f91048b29a14ee7dba6dcaf8', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 16:46:21,575 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:46:21,589 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 16:46:21,591 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:46:21,592 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:46:21,594 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:46:21,594 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:46:21,596 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 16:46:21,597 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 16:46:21,599 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 16:46:21,599 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 16:46:21,601 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 16:46:21,601 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 16:46:21,603 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 16:46:21,603 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 16:46:21,633 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\goods.yaml，test_get_goods_detail************
2021-12-28 16:46:21,656 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 16:46:21,675 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:21,895 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:49bef9a9454f41f1bb3e6b97068ca758', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:46:21,895 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:49bef9a9454f41f1bb3e6b97068ca758', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:46:21,895 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:46:21,896 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:46:21,896 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 16:46:21,896 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:46:21,911 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:49bef9a9454f41f1bb3e6b97068ca758'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:49bef9a9454f41f1bb3e6b97068ca758'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 16:46:22,164 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:46:22,168 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 16:46:22,169 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 16:46:22,169 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:46:22,170 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:49bef9a9454f41f1bb3e6b97068ca758', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 16:46:22,185 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:46:22,201 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 16:46:22,208 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:46:22,208 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:46:22,214 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:46:22,215 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:46:22,221 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:46:22,221 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:46:22,251 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_OrderQueue************
2021-12-28 16:46:22,275 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 16:46:22,284 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:22,389 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e4a4d2a3cc2f4ae7ad0f79946ec8d290', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:46:22,390 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e4a4d2a3cc2f4ae7ad0f79946ec8d290', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:46:22,390 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:46:22,391 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:46:22,391 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:46:22,391 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:46:22,458 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:e4a4d2a3cc2f4ae7ad0f79946ec8d290'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:e4a4d2a3cc2f4ae7ad0f79946ec8d290'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:22,564 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:53c8b673-5561-4dcc-bdf5-c997fac59150'}}}
2021-12-28 16:46:22,565 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:46:22,565 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:46:22,566 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:46:22,566 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:e4a4d2a3cc2f4ae7ad0f79946ec8d290', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:53c8b673-5561-4dcc-bdf5-c997fac59150'}}}}
2021-12-28 16:46:22,567 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:53c8b673-5561-4dcc-bdf5-c997fac59150'}}}
2021-12-28 16:46:22,569 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 16:46:22,569 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:46:22,570 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:46:22,570 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 16:46:22,571 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 16:46:22,571 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:46:22,572 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:46:22,624 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_selOrderQueue************
2021-12-28 16:46:22,681 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 16:46:22,689 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:22,788 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cc471afa1c054fbcbd30a4c827e8b6a0', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:46:22,814 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:22,920 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:864b2dc5975740908525a9d0eff4b223', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:46:22,921 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:864b2dc5975740908525a9d0eff4b223', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:46:22,921 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:46:22,922 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:46:22,922 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:46:22,922 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:46:22,977 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:864b2dc5975740908525a9d0eff4b223'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:864b2dc5975740908525a9d0eff4b223'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:46:23,085 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:c805569c-fefd-4ad6-97d0-5ec63d6258c0'}}}
2021-12-28 16:46:23,086 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:46:23,086 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:46:23,087 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 16:46:23,087 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 16:46:23,137 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:864b2dc5975740908525a9d0eff4b223'", 'queueNumber': "'liveQueue:c805569c-fefd-4ad6-97d0-5ec63d6258c0'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_test_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:864b2dc5975740908525a9d0eff4b223'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:c805569c-fefd-4ad6-97d0-5ec63d6258c0'}, 'tag': None}
2021-12-28 16:46:23,219 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:46:23,220 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 16:46:23,220 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 16:46:23,220 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:46:23,221 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:864b2dc5975740908525a9d0eff4b223', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:c805569c-fefd-4ad6-97d0-5ec63d6258c0'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 16:46:23,221 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:46:23,222 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 16:46:23,222 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 16:46:23,223 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 16:46:23,223 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 16:46:23,223 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 16:46:23,224 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:46:23,224 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:46:23,284 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:46:26,792 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:46:28,877 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 16:47:02,441 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:47:03,098 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_selOrderQueue************
2021-12-28 16:47:03,138 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 16:47:03,147 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:47:03,292 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:df339664f0f34baab6d3ba19a109965a', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:47:03,328 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:47:03,444 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:dc1ab6abde0f482fbeb6c654441e778d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:47:03,444 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:dc1ab6abde0f482fbeb6c654441e778d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:47:03,445 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:47:03,446 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:47:03,446 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:47:03,447 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:47:03,518 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:dc1ab6abde0f482fbeb6c654441e778d'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:dc1ab6abde0f482fbeb6c654441e778d'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:47:03,640 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:5fed6249-072b-4d8c-a6c7-e53c44ee1961'}}}
2021-12-28 16:47:03,640 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:47:03,640 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:47:03,641 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 16:47:03,641 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 16:47:03,674 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:dc1ab6abde0f482fbeb6c654441e778d'", 'queueNumber': "'liveQueue:5fed6249-072b-4d8c-a6c7-e53c44ee1961'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_test_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:dc1ab6abde0f482fbeb6c654441e778d'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:5fed6249-072b-4d8c-a6c7-e53c44ee1961'}, 'tag': 'smoke'}
2021-12-28 16:47:03,755 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:47:03,756 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 16:47:03,756 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 16:47:03,757 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:47:03,757 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:dc1ab6abde0f482fbeb6c654441e778d', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:5fed6249-072b-4d8c-a6c7-e53c44ee1961'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 16:47:03,758 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:47:03,759 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 16:47:03,760 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 16:47:03,761 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 16:47:03,761 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 16:47:03,762 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 16:47:03,762 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:47:03,763 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:47:03,848 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:47:06,923 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:47:08,944 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 16:47:48,685 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:47:49,363 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:47:52,029 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:47:54,689 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 16:48:04,925 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:48:05,579 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login************
2021-12-28 16:48:05,585 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 16:48:05,593 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:05,698 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2646b0c316114f5dbb25cbe426c937cf', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:05,699 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2646b0c316114f5dbb25cbe426c937cf', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:05,699 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:05,699 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:05,700 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:05,700 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2646b0c316114f5dbb25cbe426c937cf', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:05,701 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2646b0c316114f5dbb25cbe426c937cf', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:05,704 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 16:48:05,705 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:48:05,706 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:48:05,707 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:48:05,708 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:48:05,741 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 16:48:05,750 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 16:48:05,763 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:05,867 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:48:05,868 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:48:05,868 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 16:48:05,868 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 16:48:05,869 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:05,869 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:48:05,870 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:48:05,871 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 16:48:05,872 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 16:48:05,872 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 16:48:05,873 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 16:48:05,874 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 16:48:05,875 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:48:05,875 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:48:05,912 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_getUser************
2021-12-28 16:48:05,932 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 16:48:05,941 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:06,127 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0bef2fa81b4342c1bce07496017af0bd', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:06,128 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0bef2fa81b4342c1bce07496017af0bd', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:06,128 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:06,128 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:06,128 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 16:48:06,129 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:48:06,157 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:0bef2fa81b4342c1bce07496017af0bd'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:0bef2fa81b4342c1bce07496017af0bd'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 16:48:06,304 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:48:06,305 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 16:48:06,305 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 16:48:06,306 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:06,306 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:0bef2fa81b4342c1bce07496017af0bd', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 16:48:06,312 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:48:06,314 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 16:48:06,316 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:48:06,316 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:48:06,319 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:48:06,319 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:48:06,322 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 16:48:06,322 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 16:48:06,325 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 16:48:06,325 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 16:48:06,328 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 16:48:06,328 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 16:48:06,331 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 16:48:06,331 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 16:48:06,343 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\goods.yaml，test_get_goods_detail************
2021-12-28 16:48:06,353 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 16:48:06,361 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:06,470 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2c34c1fba4fd49c9892c2e3f9332675b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:06,470 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2c34c1fba4fd49c9892c2e3f9332675b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:06,470 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:06,470 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:06,471 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 16:48:06,471 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:48:06,490 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:2c34c1fba4fd49c9892c2e3f9332675b'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:2c34c1fba4fd49c9892c2e3f9332675b'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 16:48:06,691 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:48:06,702 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 16:48:06,702 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 16:48:06,703 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:06,703 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:2c34c1fba4fd49c9892c2e3f9332675b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 16:48:06,717 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:48:06,732 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 16:48:06,736 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:48:06,736 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:48:06,739 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:48:06,739 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:48:06,742 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:48:06,742 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:48:06,767 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_OrderQueue************
2021-12-28 16:48:06,785 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 16:48:06,793 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:06,897 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cd95f36689f34fbdaca0a0a5dbb4cf7e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:06,898 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cd95f36689f34fbdaca0a0a5dbb4cf7e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:06,898 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:06,899 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:06,899 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:48:06,900 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:48:06,975 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:cd95f36689f34fbdaca0a0a5dbb4cf7e'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:cd95f36689f34fbdaca0a0a5dbb4cf7e'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:07,079 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9265122e-b9d4-4f8a-842c-b5ad2b5db100'}}}
2021-12-28 16:48:07,080 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:48:07,080 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:48:07,081 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:07,081 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:cd95f36689f34fbdaca0a0a5dbb4cf7e', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9265122e-b9d4-4f8a-842c-b5ad2b5db100'}}}}
2021-12-28 16:48:07,081 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:9265122e-b9d4-4f8a-842c-b5ad2b5db100'}}}
2021-12-28 16:48:07,083 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 16:48:07,084 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:48:07,084 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:48:07,085 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 16:48:07,085 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 16:48:07,086 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:48:07,086 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:48:07,135 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_selOrderQueue************
2021-12-28 16:48:07,260 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_selOrderQueue': {'test_login': {}, 'test_OrderQueue': {'test_login': {}}}}
2021-12-28 16:48:07,298 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:07,430 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:287f9404b8914c1db898a4e6fbbf456c', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:07,469 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:07,573 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:53ce0e7cc6aa4e5fba9fdafd9f3617b1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:07,574 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:53ce0e7cc6aa4e5fba9fdafd9f3617b1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:07,574 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:07,575 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:07,575 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:48:07,576 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:48:07,635 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:53ce0e7cc6aa4e5fba9fdafd9f3617b1'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:53ce0e7cc6aa4e5fba9fdafd9f3617b1'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:07,751 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:f2611af7-0b7f-4215-9b3c-d28ae5c1912e'}}}
2021-12-28 16:48:07,752 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:48:07,753 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:48:07,753 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_selOrderQueue
2021-12-28 16:48:07,754 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid'], 'test_OrderQueue': ['queueNumber']}
2021-12-28 16:48:07,794 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_selOrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:53ce0e7cc6aa4e5fba9fdafd9f3617b1'", 'queueNumber': "'liveQueue:f2611af7-0b7f-4215-9b3c-d28ae5c1912e'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/selOrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}, {'api': ['.\\yaml_test_api\\order.yaml', 'test_OrderQueue'], 'keys': ['queueNumber']}], 'except': {'code': 301022, 'message': '排队中', 'result': None}, 'headers': {'app-sessionid': 'al:15200000001APP:53ce0e7cc6aa4e5fba9fdafd9f3617b1'}, 'is_skip': 1, 'json': None, 'method': 'get', 'params': {'queueNumber': 'liveQueue:f2611af7-0b7f-4215-9b3c-d28ae5c1912e'}, 'tag': None}
2021-12-28 16:48:07,874 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/selOrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:48:07,875 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue', 'test_selOrderQueue'])
2021-12-28 16:48:07,875 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_selOrderQueue
2021-12-28 16:48:07,876 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:07,876 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:53ce0e7cc6aa4e5fba9fdafd9f3617b1', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:f2611af7-0b7f-4215-9b3c-d28ae5c1912e'}}}, 'test_selOrderQueue': {'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}}
2021-12-28 16:48:07,876 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 301022, 'message': '排队中', 'result': None}}
2021-12-28 16:48:07,877 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 301022, 'message': '排队中', 'result': None}
2021-12-28 16:48:07,878 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:301022】
2021-12-28 16:48:07,878 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:301022】,预期为：【code:301022】
2021-12-28 16:48:07,879 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:排队中】
2021-12-28 16:48:07,879 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:排队中】,预期为：【message:排队中】
2021-12-28 16:48:07,880 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:48:07,880 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:48:08,002 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:48:11,158 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:48:13,229 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
2021-12-28 16:48:57,171 - run.py:[12] - [INFO] - run_testCase::正在执行测试命令：python -m pytest -vs ./test_case_temple/ -s -q --clean-alluredir --alluredir=./result/
2021-12-28 16:48:57,852 - get_case.py:[35] - [INFO] - 测试用例:.\yaml_test_api\order.yaml,test_selOrderQueue is_skip=0 跳过执行
2021-12-28 16:48:57,864 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login************
2021-12-28 16:48:57,871 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login': {}}
2021-12-28 16:48:57,880 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:57,995 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4ecfc7bc9aa34cb5b539b3d2a2b09c02', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:57,996 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4ecfc7bc9aa34cb5b539b3d2a2b09c02', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:57,996 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:57,996 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:57,997 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:57,997 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4ecfc7bc9aa34cb5b539b3d2a2b09c02', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:57,997 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:4ecfc7bc9aa34cb5b539b3d2a2b09c02', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:58,000 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。'}
2021-12-28 16:48:58,000 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:48:58,000 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:48:58,001 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:48:58,001 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:48:58,030 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_login_wrong_pwd************
2021-12-28 16:48:58,039 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_login_wrong_pwd': {}}
2021-12-28 16:48:58,052 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login_wrong_pwd::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 2012, 'message': '密码不正确', 'result': None}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'TFc5+TDnIMIQYLOqp5rovUub0Pd7665oxP0rY/KUptYfgpsJRx82OYjh+MkKHKmR0WFlhIkjXOBh\nrQGzYrLOODGOVQK2gdGRr5Pa0312QcfzfzZWpOCEb0z6ueIIVYnut76sCsx41OPI0tRsr1bGYR57\nyw1TrUF31f86YohTFmo=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:58,145 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:48:58,146 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:48:58,146 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login_wrong_pwd'])
2021-12-28 16:48:58,147 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login_wrong_pwd
2021-12-28 16:48:58,147 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:58,147 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login_wrong_pwd': {'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}}
2021-12-28 16:48:58,148 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 2012, 'message': '密码不正确', 'result': None}}
2021-12-28 16:48:58,150 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 2012, 'message': '密码不正确', 'result': None}
2021-12-28 16:48:58,150 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:2012】
2021-12-28 16:48:58,151 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:2012】,预期为：【code:2012】
2021-12-28 16:48:58,151 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:密码不正确】
2021-12-28 16:48:58,152 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:密码不正确】,预期为：【message:密码不正确】
2021-12-28 16:48:58,152 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【result:None】
2021-12-28 16:48:58,153 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【result:None】,预期为：【result:None】
2021-12-28 16:48:58,188 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\buyer_login.yaml，test_getUser************
2021-12-28 16:48:58,211 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_getUser': {'test_login': {}}}
2021-12-28 16:48:58,221 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:58,319 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:819dd3df183844d881aef3852445881b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:58,319 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:819dd3df183844d881aef3852445881b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:58,320 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:58,320 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:58,321 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_getUser
2021-12-28 16:48:58,321 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:48:58,357 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_getUser::传入接口参数::{'sessionid': "'al:15200000001APP:819dd3df183844d881aef3852445881b'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/getUser', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'buyerLevel': 10, 'code': 200, 'inviter': 19355, 'message': '调用成功。', 'superior': 19414, 'userId': 19414}, 'headers': {'app-sessionid': 'al:15200000001APP:819dd3df183844d881aef3852445881b'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': None, 'tag': None}
2021-12-28 16:48:58,474 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/getUser::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:48:58,475 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_getUser'])
2021-12-28 16:48:58,475 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_getUser
2021-12-28 16:48:58,476 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:58,476 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:819dd3df183844d881aef3852445881b', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_getUser': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}}
2021-12-28 16:48:58,479 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355, 'smallGold': None, 'openId': None, 'unionid': None, 'inviteName': 'Sara', 'rank': 1, 'rankName': None, 'nickName': '啵啵啵啵啵啵啵反反复', 'realName': '郭雨6584', 'avatar': 'http://img.chanbuyer.com/wsms2/head/7037da68-29cf-4a23-b4b8-39a7a366e6db_W600_H600.jpg', 'companyId': 1000, 'companyName': None, 'tel': '15200000001', 'gender': 1, 'status': None, 'invitationCode': '5ljNWq0i', 'identityId': '152104199409195920', 'passportId': 'G03247053', 'city': None, 'birthday': None, 'baAddressVo': {'addressId': '2021091017461470821268', 'userId': 19414, 'companyId': 1003, 'country': '中国', 'province': '新疆维吾尔自治区', 'city': '博尔塔拉蒙古自治州', 'district': '精河县', 'detail': '432222', 'name': 'ffffffsss', 'tel': '13244444444', 'status': 1, 'isDefault': 0, 'countryId': 1, 'provinceId': 3338, 'cityId': 3371, 'districtId': 3374, 'createTime': '2021-09-10T17:46:14.000+08:00', 'source': 'APP'}, 'oweFee': 0, 'icon': 'http://img.chanbuyer.com/wsms2/userRank/149b2b07-08a2-48ee-9d9c-ac3ea837f67e_W113_H42.png', 'balance': 972002666, 'serviceFee': None, 'benefitBalance': None, 'noBenefitBalance': None, 'scoreBalance': None, 'noScoreBalance': None, 'isSetPayPassword': 1, 'isSetLoginPassword': 1, 'isUpgrade': 0, 'map': None, 'ocrVo': {'ocrId': 375007, 'name': '港只要有啡发士大夫漂流蚌埠三中框架盟介', 'userId': 19414, 'identityNo': '40028119900533112X', 'status': 1, 'validStartTime': '1970-07-01T00:00:00.000+08:00', 'validEndTime': '1970-07-01T00:00:00.000+08:00', 'remark': '', 'createTime': '2021-03-29T16:27:37.000+08:00', 'lastUpdateTime': '2021-04-06T14:52:52.000+08:00', 'isDelete': 0, 'identityFrontUrl': '', 'identityBackUrl': '', 'isDefault': 0, 'orderWrapId': None, 'whetherInsert': None}}}}
2021-12-28 16:48:58,480 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'userId': 19414, 'buyerLevel': 10, 'superior': 19414, 'inviter': 19355}
2021-12-28 16:48:58,482 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:48:58,482 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:48:58,484 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:48:58,484 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:48:58,486 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【userId:19414】
2021-12-28 16:48:58,486 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【userId:19414】,预期为：【userId:19414】
2021-12-28 16:48:58,488 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【buyerLevel:10】
2021-12-28 16:48:58,488 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【buyerLevel:10】,预期为：【buyerLevel:10】
2021-12-28 16:48:58,490 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【superior:19414】
2021-12-28 16:48:58,490 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【superior:19414】,预期为：【superior:19414】
2021-12-28 16:48:58,492 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【inviter:19355】
2021-12-28 16:48:58,492 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【inviter:19355】,预期为：【inviter:19355】
2021-12-28 16:48:58,514 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\goods.yaml，test_get_goods_detail************
2021-12-28 16:48:58,541 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_get_goods_detail': {'test_login': {}}}
2021-12-28 16:48:58,552 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:58,669 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c702b3c4cc644bd585680df9613a198f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:58,669 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c702b3c4cc644bd585680df9613a198f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:58,669 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:58,670 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:58,670 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_get_goods_detail
2021-12-28 16:48:58,670 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:48:58,690 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\goods.yaml::请求的接口名称::test_get_goods_detail::传入接口参数::{'sessionid': "'al:15200000001APP:c702b3c4cc644bd585680df9613a198f'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'message': '调用成功。'}, 'headers': {'app-sessionid': 'al:15200000001APP:c702b3c4cc644bd585680df9613a198f'}, 'is_skip': None, 'json': None, 'method': 'get', 'params': {'cloudSpuId': '4961'}, 'tag': None}
2021-12-28 16:48:58,916 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paGoods/selRecommendByCloudSpuId/::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:48:58,932 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_get_goods_detail'])
2021-12-28 16:48:58,933 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_get_goods_detail
2021-12-28 16:48:58,933 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:58,934 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:c702b3c4cc644bd585680df9613a198f', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_get_goods_detail': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}}
2021-12-28 16:48:58,949 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': [{'cspuId': 4966, 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028], 'price': 4000, 'name': '满折按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4965, 'cskuIds': [32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020], 'price': 4000, 'name': '满折按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4964, 'cskuIds': [32005, 32006, 32007, 32008, 32009, 32010, 32011, 32012, 32263], 'price': 4000, 'name': '满折按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4963, 'cskuIds': [31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32327], 'price': 4000, 'name': '满折按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4962, 'cskuIds': [31989, 31990, 31991, 31992, 31993, 31994, 31995, 31996], 'price': 4000, 'name': '满减按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4961, 'cskuIds': [31981, 31982, 31983, 31984, 31985, 31986, 31987, 31988, 33286], 'price': 1300, 'name': '满减按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4960, 'cskuIds': [31973, 31974, 31975, 31976, 31977, 31978, 31979, 31980], 'price': 4000, 'name': '满减按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4959, 'cskuIds': [31965, 31966, 31967, 31968, 31969, 31970, 31971, 31972], 'price': 4000, 'name': '满减按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4958, 'cskuIds': [31957, 31958, 31959, 31960, 31961, 31962, 31963, 31964, 32264], 'price': 1000, 'name': 'N元任选按摩椅D勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4957, 'cskuIds': [31949, 31950, 31951, 31952, 31953, 31954, 31955, 31956], 'price': 4000, 'name': 'N元任选按摩椅C勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4956, 'cskuIds': [31941, 31942, 31943, 31944, 31945, 31946, 31947, 31948], 'price': 4000, 'name': 'N元任选按摩椅B勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4955, 'cskuIds': [31933, 31934, 31935, 31936, 31937, 31938, 31939, 31940], 'price': 4000, 'name': 'N元任选按摩椅A勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 4954, 'cskuIds': [31924, 31925, 31926, 31927, 31928, 31929, 31930, 31931, 31932], 'price': 400000, 'name': '按摩椅1勿改', 'pic': 'https://img.chananchor.com/xss/userRank/607c3519-3c1d-40a2-8d7c-1f7acecbcfac_W800_H800.jpg', 'saleNum': None}, {'cspuId': 60, 'cskuIds': [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], 'price': 500, 'name': '清华北大儿童童装 7.8发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/a24116b4-b2d5-4cad-8017-02f20c15be0d_W750_H700.jpg', 'saleNum': None}, {'cspuId': 52, 'cskuIds': [237, 238, 239], 'price': 1000, 'name': 'Pat McGrath 限量收藏版雾面唇膏', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/e96d1ccd-dcd0-4cf6-9a3a-54a5e804d97b_W1563_H1459.jpg', 'saleNum': None}, {'cspuId': 51, 'cskuIds': [235, 236], 'price': 0, 'name': ' 泰蓝芝士冰淇淋（江西陕西内蒙古甘肃青海宁夏新疆西藏河南广西山西云南贵州海南不发货） 7.6发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/6e1f5a33-2bd2-44b5-9265-aeaaaa8d070a_W750_H700.jpg', 'saleNum': None}, {'cspuId': 50, 'cskuIds': [229, 230, 231, 232, 233, 234], 'price': 0, 'name': '乳胶冰丝席套组 7.12发货', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/4248385b-af90-4caa-a85d-80b13bf94c20_W750_H700.jpg', 'saleNum': None}, {'cspuId': 49, 'cskuIds': [227, 228], 'price': 17900, 'name': '金牌不可买', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/5b2e80b4-4460-4636-8683-ebfcf6da504b_W750_H700.jpg', 'saleNum': None}, {'cspuId': 48, 'cskuIds': [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], 'price': 0, 'name': '1分', 'pic': 'http://img.chanbuyer.com/wsms2/userRank/8d512f85-e3e7-4550-b33a-2f500b6c2ce8_W1563_H1459.jpg', 'saleNum': None}]}}
2021-12-28 16:48:58,964 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'message': '调用成功。', 'cskuIds': [32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]}
2021-12-28 16:48:58,969 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:48:58,970 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:48:58,975 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:48:58,975 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:48:58,981 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:48:58,981 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】,预期为：【cskuIds:[32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028]】
2021-12-28 16:48:59,014 - test_temple.py:[17] - [INFO] - ************测试用例开始执行测试接口：.\yaml_test_api\order.yaml，test_OrderQueue************
2021-12-28 16:48:59,033 - base_api.py:[207] - [INFO] - 测试接口依赖树为：{'test_OrderQueue': {'test_login': {}}}
2021-12-28 16:48:59,042 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\buyer_login.yaml::请求的接口名称::test_login::传入接口参数::{}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paLogin/login', 'data': None, 'depend': [], 'except': {'code': 200, 'message': '调用成功。'}, 'headers': None, 'is_skip': None, 'json': {'loginPassword': 'ExYypDg9IK/wi9EP/HMCS5Jav+rV3pWYjyr49qEiTUxe+oOXwjJNbKxZ4ZyYz42iGG6Th5jsaQhD\nKZQ1Sg/V/OK706EU9S+cXlJe6V9A6iwWcwm1cid/pSCjKwKNzUigO25e8xkIgvAVCKXcHhHrBaDC\n5w8n9CWdf55pnDJ3UZU=\n', 'tel': '15200000001'}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:59,158 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paLogin/login::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:28ed5b592c774ee0af888e9a0e077bca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}
2021-12-28 16:48:59,158 - base_api.py:[234] - [INFO] - top_res_dic是：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:28ed5b592c774ee0af888e9a0e077bca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}}
2021-12-28 16:48:59,159 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login'])
2021-12-28 16:48:59,159 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_login
2021-12-28 16:48:59,160 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为test_OrderQueue
2021-12-28 16:48:59,160 - base_api.py:[240] - [INFO] - api_depend_keys[api_name]:{'test_login': ['sessionid']}
2021-12-28 16:48:59,208 - base_api.py:[86] - [INFO] - 读取YAML文件::.\yaml_test_api\order.yaml::请求的接口名称::test_OrderQueue::传入接口参数::{'sessionid': "'al:15200000001APP:28ed5b592c774ee0af888e9a0e077bca'"}::接口请求参数api_datas::{'api': '/api_v2/provider-app/paOrder/OrderQueue', 'data': None, 'depend': [{'api': ['.\\yaml_test_api\\buyer_login.yaml', 'test_login'], 'keys': ['sessionid']}], 'except': {'code': 200, 'message': '调用成功。', 'status': 1}, 'headers': {'app-sessionid': 'al:15200000001APP:28ed5b592c774ee0af888e9a0e077bca'}, 'is_skip': None, 'json': {'buildOrderDto': {'addressId': '2021091017461470821268', 'areaId': 3374, 'bgCSkusWithPromotionDTO': {'cskusWithoutPromotion': [{'buyerPrice': 0, 'cskuId': 31981, 'discountUnitPrice': 0, 'goldPrice': 0, 'groupPrice': 1300, 'haveChosen': True, 'promotionNum': 0, 'realTotalPrice': 0, 'realUnitPrice': 0, 'shopCartCSku': {'aPrice': 1000, 'attributes': [{'key': '尺寸', 'value': '①1.5*200cm'}, {'key': '颜色', 'value': '卡其色'}], 'bPrice': 1200, 'cskuId': 31981, 'cspuId': 4961, 'delivery': 1, 'goodsType': 1, 'groupPrice': 1300, 'isRegister': 1, 'limitMode': 0, 'limitNum': 999, 'num': 1, 'pic': 'http://img.chanbuyer.com/wsms2/compress/goods/423e75eb-c584-4b14-9fa6-1eadf3d0bf16_W1562_H1458.jpg', 'preIncome': 300, 'skuId': 13, 'smallGoldPrice': 1100, 'spuId': 6, 'status': 1, 'supplierName': '我是买手商城', 'title': '满减按摩椅C勿改', 'type': 1}, 'skuNum': 1, 'smallGoldPrice': 0}], 'promotionAndCSkus': [], 'totalChosenPrice': 1300, 'totalChosenRealPrice': 1300}, 'buyerId': 19414, 'cheapAmount': 0, 'cloudSkuIds': [31981], 'cspuIds': [4961], 'freightAmount': 0, 'isGroupOrder': 2, 'mark': '', 'needCleanShopCart': False, 'ocrId': 0, 'orderItems': [{'cloudSkuId': 31981, 'cspuId': 4961, 'isPromotion': 0, 'promotionId': 0, 'promotionUnitPrice': 0, 'skuNum': 1, 'unitPrice': 1300}], 'orderType': 1, 'preferentialID': 0, 'productAmount': 1300, 'realPayAmount': 1300, 'skuIds': [13]}, 'sendMessageTime': 0}, 'method': 'post', 'params': None, 'tag': None}
2021-12-28 16:48:59,311 - base_api.py:[91] - [INFO] - 接口::/api_v2/provider-app/paOrder/OrderQueue::响应数据为::{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:c528d035-7c83-4543-bfae-c87671bb9779'}}}
2021-12-28 16:48:59,311 - base_api.py:[250] - [INFO] - 接口响应数据字典集top_res_dic为：dict_keys(['test_login', 'test_OrderQueue'])
2021-12-28 16:48:59,312 - base_api.py:[251] - [INFO] - 从top_res_dic获取到接口名api为test_OrderQueue
2021-12-28 16:48:59,312 - base_api.py:[253] - [INFO] - 下游接口名far_api_name为None
2021-12-28 16:48:59,313 - base_api.py:[264] - [INFO] - 所有接口响应集top_res_dic为：{'test_login': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'sessionid': 'al:15200000001APP:28ed5b592c774ee0af888e9a0e077bca', 'orderWrapId': None, 'status': 1, 'type': None, 'isWechat': 1, 'isCertification': 1}}}, 'test_OrderQueue': {'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:c528d035-7c83-4543-bfae-c87671bb9779'}}}}
2021-12-28 16:48:59,313 - test_temple.py:[21] - [INFO] - 测试用例中获取到的接口实际响应result为{'status_code': 200, 'content': {'code': 200, 'message': '调用成功。', 'result': {'status': 1, 'message': '排队成功', 'queueNumber': 'liveQueue:c528d035-7c83-4543-bfae-c87671bb9779'}}}
2021-12-28 16:48:59,315 - test_temple.py:[23] - [INFO] - 测试用例中从yaml中获取到的期望值exc为{'code': 200, 'status': 1, 'message': '调用成功。'}
2021-12-28 16:48:59,316 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【code:200】
2021-12-28 16:48:59,316 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【code:200】,预期为：【code:200】
2021-12-28 16:48:59,317 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【status:1】
2021-12-28 16:48:59,317 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【status:1】,预期为：【status:1】
2021-12-28 16:48:59,318 - base_api.py:[118] - [INFO] - 测试用例中获取到接口的断言实际值为:: 【message:调用成功。】
2021-12-28 16:48:59,318 - base_api.py:[121] - [INFO] - 测试用例通过::接口实际响应值act_value为：【message:调用成功。】,预期为：【message:调用成功。】
2021-12-28 16:48:59,374 - run.py:[20] - [INFO] - run_testCase::测试执行完毕，正在执行生成报告命令：allure generate ./result/ -o ./allure-report/ --clean
2021-12-28 16:49:02,414 - zip_file.py:[19] - [INFO] - 文件：./allure-report 压缩成功
2021-12-28 16:49:04,618 - run.py:[42] - [INFO] - 邮件发送成功，邮件标题：接口场景式自动化测试报告
